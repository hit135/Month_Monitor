<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.fscom.firsens.mng.challenge.repository.MCStoreRepo">

    <select id="LIST_MCST_STORE_INFO" parameterType="map" resultType="map">
        SELECT
            A.AREACODE, A.STRCODE, A.STRNAME, A.STRADDR, A.STRTEL, A.STROWNTEL, A.STRPOSLAT, A.STRPOSLON
        FROM
            F_STORE A
                LEFT JOIN F_SENSOR_INFO B
                    ON A.STRCODE = B.STRCODE
        WHERE
            CONCAT(A.USEYN, A.DELYN, A.GRPCODE) = 'YN042'
            AND CONCAT(B.DELYN, B.STRCODE) LIKE 'NFS_STR_%'
            AND B.SNSRID = #{snsrid}
    </select>

    <select id="LIST_MCST_SENSOR_EVT_CNT" parameterType="map" resultType="map">
        SELECT
            AREACODE
            , SNSRID
            , MAX(OCALM + IGOALM + IGRALM) AS ALMCNT
        FROM
            V_ALL_SENSOR_LOG_MAP
        WHERE
            CONCAT(GRPCODE, GUCODE) LIKE '04230%'
            AND AREACODE = #{areacode}
            AND STRCODE = #{strcode}
        GROUP BY
            AREACODE, SNSRID
        ORDER BY
            3 DESC, SNSRID
    </select>

    <select id="SELECT_MCST_STORE_INFO" parameterType="map" resultType="map">
        SELECT
            A.AREACODE,
            A.STRCODE,
            A.STRNAME,
            A.STRADDR,
            A.STRTEL,
            A.STROWNTEL,
            A.STRPOSLAT,
            A.STRPOSLON,
            GROUP_CONCAT(B.SEQ ORDER BY B.SEQ) AS SEQ,
            GROUP_CONCAT(B.STRCODE ORDER BY B.SEQ) AS STRCODE,
            GROUP_CONCAT(B.IMGNAME ORDER BY B.SEQ) AS IMGNAME,
            GROUP_CONCAT(B.IMGPATH ORDER BY B.SEQ) AS IMGPATH,
            GROUP_CONCAT(B.IMGSIZE ORDER BY B.SEQ) AS IMGSIZE,
            GROUP_CONCAT(B.IMGNUM ORDER BY B.SEQ) AS IMGNUM,
            GROUP_CONCAT(B.ORINAME ORDER BY B.SEQ) AS ORINAME,
            GROUP_CONCAT(DATE_FORMAT(B.REGDATE, '%Y-%m-%d %H:%i:%s') ORDER BY B.SEQ) AS REGDATE
        FROM
            F_STORE A
                LEFT JOIN (SELECT * FROM F_AREA_IMG WHERE IMGLEVEL = 'store') B
                    ON A.STRCODE = B.STRCODE
        WHERE
            CONCAT(A.USEYN, A.DELYN, A.GRPCODE) = 'YN042'
            AND A.AREACODE = #{areacode}
            AND A.STRCODE = #{strcode}
    </select>

    <select id="LIST_MCST_SENSOR_STATE" parameterType="map" resultType="map">
        SELECT
            A.PANELNAME
            , A.SNSRID
            , A.SNSRNICK
            , A.SNSRMGPS
            , D.DATACNT
            , B.STRPOSLAT
            , B.STRPOSLON
            , (CASE
                   WHEN C.STATE IS NOT NULL THEN C.STATE
                   WHEN C.STATE IS NULL AND D.DATACNT > 0 THEN 'NORMAL'
                   ELSE 'DISCON'
               END) AS STATE
        FROM
            F_SENSOR_INFO A
                LEFT JOIN F_STORE B
                    ON A.STRCODE = B.STRCODE
                LEFT JOIN (SELECT
                               SNSRID
                               , (CASE
                                      WHEN INSTR(CONCAT(MAX(OCALM), MAX(IGOALM), MAX(IGRALM)), '2') > 0 THEN 'WARNING'
                                      WHEN INSTR(CONCAT(MAX(OCALM), MAX(IGOALM), MAX(IGRALM)), '1') > 0 THEN 'CAUTION'
                                  END) AS STATE
                           FROM
                               F_SENSOR_LOG
                           WHERE
                               REGDATE > CURDATE()
                           GROUP BY
                               SNSRID) C
                    ON A.SNSRID = C.SNSRID
                LEFT JOIN (SELECT
                               SNSRID, COUNT(*) AS DATACNT
                           FROM
                               F_SENSOR_DATA
                           WHERE
                               SNSRRCVTIME > NOW() - INTERVAL 1 HOUR
                           GROUP BY
                               SNSRID) D
                    ON A.SNSRID = D.SNSRID
        WHERE
            CONCAT(A.DELYN, A.STRCODE) LIKE 'NFS_STR_%'
            AND CONCAT(B.USEYN, B.DELYN, B.GRPCODE) = 'YN042'
            AND B.AREACODE = #{areacode}
            AND B.STRCODE = #{strcode}
        ORDER BY
            6 DESC, D.DATACNT DESC, A.PANELNAME, A.SNSRNICK
    </select>

    <select id="SELECT_MCST_EVENT_TABLE_INFO" parameterType="map" resultType="map">
        SELECT
            BACKUPYEAR
            , MIN(MINDATE) AS MINDATE
            , MAX(MAXDATE) AS MAXDATE
        FROM
            (
                (SELECT
                     '' AS BACKUPYEAR, DATE(MIN(REGDATE)) AS MINDATE, DATE(MAX(REGDATE)) AS MAXDATE
                 FROM
                     F_SENSOR_LOG)
                UNION
                (SELECT
                     '_2021' AS BACKUPYEAR, DATE(MIN(REGDATE)) AS MINDATE, DATE(MAX(REGDATE)) AS MAXDATE
                 FROM
                     F_SENSOR_LOG_2021)
                UNION
                (SELECT
                     '_2020' AS BACKUPYEAR, DATE(MIN(REGDATE)) AS MINDATE, DATE(MAX(REGDATE)) AS MAXDATE
                 FROM
                     F_SENSOR_LOG_2020)
            ) A
        WHERE
            #{regdt} BETWEEN MINDATE AND MAXDATE
    </select>

    <select id="LIST_MCST_STORE_SENSOR_DATA" parameterType="map" resultType="map">
        SELECT
            <choose>
                <when test='datatype == "m"'>STR_TO_DATE(DATE_FORMAT(C.SNSRRCVTIME, '%Y-%m'), '%Y-%m-%d')</when>
                <when test='datatype == "d"'>STR_TO_DATE(DATE(C.SNSRRCVTIME), '%Y-%m-%d')</when>
                <when test='datatype == "h"'>STR_TO_DATE(DATE_FORMAT(C.SNSRRCVTIME, '%Y-%m-%d %H'), '%Y-%m-%d %H')</when>
                <otherwise>C.SNSRRCVTIME</otherwise>
            </choose> AS REGDT
            , AVG(C.SNSRKWH) AS KWH
            , AVG(C.SNSRWATT) AS WATT
            , AVG(C.SNSRVOLT) AS VOLT
            , AVG(C.SNSRAMPERE) AS AMPERE
            , AVG(C.SNSRHZ) AS HZ
            , AVG(C.SNSRPF) AS PF
            , AVG(C.SNSRIGO) AS IGO
            , AVG(C.SNSRIGR) AS IGR
            , AVG(C.SNSRIGC) AS IGC
            , AVG(C.SNSRREG) AS REG
        FROM
            F_SENSOR_INFO A
                LEFT JOIN F_STORE B
                    ON A.STRCODE = B.STRCODE
                LEFT JOIN ${tblSensorData} C
                    ON A.SNSRID = C.SNSRID
        WHERE
            CONCAT(A.DELYN, A.STRCODE) LIKE 'NFS_STR_%'
            AND CONCAT(B.USEYN, B.DELYN, B.GRPCODE) = 'YN042'
            AND B.STRCODE = #{strcode}
            <if test="!@org.thymeleaf.util.StringUtils@isEmptyOrWhitespace(snsrid)">
            AND A.SNSRID = #{snsrid}
            </if>
            <if test='termtype == "m"'>
            AND C.SNSRRCVTIME BETWEEN CONCAT(#{regdt}, ' 00:00:00') AND CONCAT(LAST_DAY(#{regdt}, ' 23:59:59'))
            </if>
            <if test='termtype != "m"'>
            AND C.SNSRRCVTIME BETWEEN CONCAT(#{regdt}, ' 00:00:00') AND CONCAT(#{regdt}, ' 23:59:59')
            </if>
        GROUP BY
            1
        ORDER BY
            1 ${order}
    </select>

    <select id="LIST_MCST_DATA_LOG" parameterType="map" resultType="map">
        SELECT
            A.DSEQ
            , DATE_FORMAT(A.SNSRRCVTIME, '%Y-%m-%d %H:%i:%s') AS SNSRRCVTIME
            , DATE_FORMAT(A.SNSRRCVTIME, '%Y-%m-%d') AS REGDATE
            , A.SNSRID
            , A.SNSRKWH
            , A.SNSRVOLT
            , A.SNSRWATT
            , A.SNSRAMPERE
            , A.SNSRHZ
            , A.SNSRPF
            , A.SNSRREG
            , A.SNSRRSSI
            , A.SNSRIGR
            , A.SNSRIGO
            , A.SNSRIGC
            , B.OCALM
            , B.IGOALM
            , B.IGRALM
            , B.LCAUSE
            , (CASE
                   WHEN INSTR(CONCAT(B.OCALM, B.IGOALM, B.IGRALM), '2') > 0 THEN 'DANGER'
                   WHEN INSTR(CONCAT(B.OCALM, B.IGOALM, B.IGRALM), '1') > 0 THEN 'WARN'
               END) AS STATE
            , (CASE
                   WHEN OCALM > 0 THEN 'AMPERE'
                   WHEN IGOALM > 0 THEN 'IGO'
                   WHEN IGRALM > 0 THEN 'IGR'
               END) AS ALMTYPE
            , DATE_FORMAT(C.DATARCVTIME, '%Y-%m-%d %H:%i:%s') AS DATARCVTIME
        FROM
            ${tblSensorData} A
                LEFT JOIN ${tblSensorLog} B
                    ON A.SNSRID = B.SNSRID
                LEFT JOIN F_SENSOR_INFO C
                    ON A.SNSRID = C.SNSRID
                LEFT JOIN F_STORE D
                    ON C.STRCODE = D.STRCODE
        WHERE
            CONCAT(C.DELYN, C.STRCODE) LIKE 'NFS_STR_%'
            AND CONCAT(D.USEYN, D.DELYN, D.GRPCODE) = 'YN042'
            AND A.DSEQ BETWEEN CAST(B.DSEQ AS SIGNED) - 5 AND B.DSEQ + 5
            <choose>
                <when test="!@org.thymeleaf.util.StringUtils@isEmptyOrWhitespace(regdt)">
                AND A.SNSRRCVTIME BETWEEN CONCAT(#{regdt}, ' 00:00:00') AND CONCAT(#{regdt}, ' 23:59:59')
                </when>
                <otherwise>
                AND A.SNSRRCVTIME > CURDATE()
                </otherwise>
            </choose>
            AND D.AREACODE = #{areacode}
            AND C.STRCODE = #{strcode}
            <if test="!@org.thymeleaf.util.StringUtils@isEmptyOrWhitespace(snsrid)">
            AND C.SNSRID = #{snsrid}
            </if>
        ORDER BY
            A.SNSRRCVTIME DESC
    </select>

    <select id="SELECT_MCST_SENSOR_USEKWH_MONTH" parameterType="map" resultType="float">
        SELECT
            IFNULL(MAX(SNSRKWH) - MIN(SNSRKWH), 0)
        FROM
            ${tblSensorData} A
        WHERE
            A.SNSRRCVTIME BETWEEN CONCAT(DATE_FORMAT(#{regdt}, '%Y-%m'), '-01 00:00:00')
                          AND CONCAT(LAST_DAY(#{regdt}), ' 23:59:59')
            AND SNSRID = #{snsrid}
    </select>

    <select id="CNT_DATA_LOG_TOTAL" parameterType="map" resultType="int">
        SELECT
            A.CNT + B.CNT + C.CNT
        FROM
            (SELECT
                 COUNT(DSEQ) AS CNT
             FROM
                 F_SENSOR_DATA
             WHERE
                 SNSRRCVTIME <![CDATA[<=]]> CONCAT(#{regdt}, ' 23:59:59')
                 AND SNSRID = #{snsrid}) A
            ,
            (SELECT
                 COUNT(DSEQ) AS CNT
             FROM
                 F_SENSOR_DATA_2021
             WHERE
                 SNSRRCVTIME <![CDATA[<=]]> CONCAT(#{regdt}, ' 23:59:59')
                 AND SNSRID = #{snsrid}) B
            ,
            (SELECT
                 COUNT(DSEQ) AS CNT
             FROM
                 F_SENSOR_DATA_2020
             WHERE
                 SNSRRCVTIME <![CDATA[<=]]> CONCAT(#{regdt}, ' 23:59:59')
                 AND SNSRID = #{snsrid}) B
    </select>

    <select id="LIST_MCST_DATA_LOG_TOTAL" parameterType="map" resultType="map">
        (SELECT
             DSEQ
             , DATE_FORMAT(SNSRRCVTIME, '%Y-%m-%d %H:%i:%s') AS SNSRRCVTIME
             , SNSRID
             , SUBSTRING(SNSRID FROM 9 FOR 4) SNSRIDSUBSTR
             , SNSRWATT
             , SNSRAMPERE
             , SNSRIGO
         FROM
             F_SENSOR_DATA
         WHERE
             SNSRRCVTIME <![CDATA[<=]]> CONCAT(#{regdt}, ' 23:59:59')
             AND SNSRID = #{snsrid}
         ORDER BY
             SNSRRCVTIME DESC
         LIMIT
             #{pagelimit})

        UNION ALL

        (SELECT
             DSEQ
             , DATE_FORMAT(SNSRRCVTIME, '%Y-%m-%d %H:%i:%s') AS SNSRRCVTIME
             , SNSRID
             , SUBSTRING(SNSRID FROM 9 FOR 4) SNSRIDSUBSTR
             , SNSRWATT
             , SNSRAMPERE
             , SNSRIGO
         FROM
             F_SENSOR_DATA_2021
         WHERE
             SNSRRCVTIME <![CDATA[<=]]> CONCAT(#{regdt}, ' 23:59:59')
             AND SNSRID = #{snsrid}
         ORDER BY
             SNSRRCVTIME DESC
         LIMIT
             #{pagelimit})
        LIMIT
            #{pagestart}, 1000
    </select>

    <select id="CNT_DATA_LOG_EVENT" parameterType="map" resultType="int">
        SELECT
            A.CNT + B.CNT + C.CNT
        FROM
            (SELECT
                 COUNT(LSEQ) AS CNT
             FROM
                 F_SENSOR_LOG
             WHERE
                 REGDATE <![CDATA[<=]]> CONCAT(#{regdt}, ' 23:59:59')
                 AND SNSRID = #{snsrid}
                 AND <choose>
                         <when test='"check-danger,check-warn".equals(type)'>(OCALM + IGOALM + IGRALM) > 0</when>
                         <when test='"check-danger".equals(type)'>INSTR(CONCAT(OCALM, IGOALM, IGRALM), '2') > 0</when>
                         <when test='"check-warn".equals(type)'>
                         (INSTR(CONCAT(OCALM, IGOALM, IGRALM), '2') = 0 AND INSTR(CONCAT(OCALM, IGOALM, IGRALM), '1') > 0)
                         </when>
                     </choose>) A
            ,
            (SELECT
                 COUNT(LSEQ) AS CNT
             FROM
                 F_SENSOR_LOG_2021
             WHERE
                 REGDATE <![CDATA[<=]]> CONCAT(#{regdt}, ' 23:59:59')
                 AND SNSRID = #{snsrid}
                 AND <choose>
                         <when test='"check-danger,check-warn".equals(type)'>(OCALM + IGOALM + IGRALM) > 0</when>
                         <when test='"check-danger".equals(type)'>INSTR(CONCAT(OCALM, IGOALM, IGRALM), '2') > 0</when>
                         <when test='"check-warn".equals(type)'>
                         (INSTR(CONCAT(OCALM, IGOALM, IGRALM), '2') = 0 AND INSTR(CONCAT(OCALM, IGOALM, IGRALM), '1') > 0)
                         </when>
                     </choose>) B
            ,
            (SELECT
                 COUNT(LSEQ) AS CNT
             FROM
                 F_SENSOR_LOG_2020
             WHERE
                 REGDATE <![CDATA[<=]]> CONCAT(#{regdt}, ' 23:59:59')
                 AND SNSRID = #{snsrid}
                 AND <choose>
                         <when test='"check-danger,check-warn".equals(type)'>(OCALM + IGOALM + IGRALM) > 0</when>
                         <when test='"check-danger".equals(type)'>INSTR(CONCAT(OCALM, IGOALM, IGRALM), '2') > 0</when>
                         <when test='"check-warn".equals(type)'>
                         (INSTR(CONCAT(OCALM, IGOALM, IGRALM), '2') = 0 AND INSTR(CONCAT(OCALM, IGOALM, IGRALM), '1') > 0)
                         </when>
                     </choose>) C
    </select>

    <select id="LIST_MCST_DATA_LOG_EVENT" parameterType="map" resultType="map">
        (SELECT
             DSEQ
             , LSEQ
             , DATE_FORMAT(REGDATE, '%Y-%m-%d %H:%i:%s') AS SNSRRCVTIME
             , SNSRID
             , SUBSTRING(SNSRID FROM 9 FOR 4) SNSRIDSUBSTR
             , LCAUSE
             , (CASE
                    WHEN INSTR(CONCAT(OCALM, IGOALM, IGRALM), '2') > 0 THEN 'DANGER'
                    WHEN INSTR(CONCAT(OCALM, IGOALM, IGRALM), '2') = 0 AND INSTR(CONCAT(OCALM, IGOALM, IGRALM), '1') > 0 THEN 'WARN'
                END) AS STATE
         FROM
             F_SENSOR_LOG
         WHERE
             REGDATE <![CDATA[<=]]> CONCAT(#{regdt}, ' 23:59:59')
             AND SNSRID = #{snsrid}
             AND <choose>
                     <when test='"check-danger,check-warn".equals(type)'>(OCALM + IGOALM + IGRALM) > 0</when>
                     <when test='"check-danger".equals(type)'>INSTR(CONCAT(OCALM, IGOALM, IGRALM), '2') > 0</when>
                     <when test='"check-warn".equals(type)'>
                     (INSTR(CONCAT(OCALM, IGOALM, IGRALM), '2') = 0 AND INSTR(CONCAT(OCALM, IGOALM, IGRALM), '1') > 0)
                     </when>
                 </choose>
         ORDER BY
             REGDATE DESC
         LIMIT
             #{pagelimit})

        UNION ALL

        (SELECT
             DSEQ
             , LSEQ
             , DATE_FORMAT(REGDATE, '%Y-%m-%d %H:%i:%s') AS SNSRRCVTIME
             , SNSRID
             , SUBSTRING(SNSRID FROM 9 FOR 4) SNSRIDSUBSTR
             , LCAUSE
             , (CASE
                    WHEN INSTR(CONCAT(OCALM, IGOALM, IGRALM), '2') > 0 THEN 'DANGER'
                    WHEN INSTR(CONCAT(OCALM, IGOALM, IGRALM), '2') = 0 AND INSTR(CONCAT(OCALM, IGOALM, IGRALM), '1') > 0 THEN 'WARN'
                END) AS STATE
         FROM
             F_SENSOR_LOG_2021
         WHERE
             REGDATE <![CDATA[<=]]> CONCAT(#{regdt}, ' 23:59:59')
             AND SNSRID = #{snsrid}
             AND <choose>
                     <when test='"check-danger,check-warn".equals(type)'>(OCALM + IGOALM + IGRALM) > 0</when>
                     <when test='"check-danger".equals(type)'>INSTR(CONCAT(OCALM, IGOALM, IGRALM), '2') > 0</when>
                     <when test='"check-warn".equals(type)'>
                     (INSTR(CONCAT(OCALM, IGOALM, IGRALM), '2') = 0 AND INSTR(CONCAT(OCALM, IGOALM, IGRALM), '1') > 0)
                     </when>
                 </choose>
         ORDER BY
             REGDATE DESC
         LIMIT
             #{pagelimit})

        UNION ALL

        (SELECT
             DSEQ
             , LSEQ
             , DATE_FORMAT(REGDATE, '%Y-%m-%d %H:%i:%s') AS SNSRRCVTIME
             , SNSRID
             , SUBSTRING(SNSRID FROM 9 FOR 4) SNSRIDSUBSTR
             , LCAUSE
             , (CASE
                    WHEN INSTR(CONCAT(OCALM, IGOALM, IGRALM), '2') > 0 THEN 'DANGER'
                    WHEN INSTR(CONCAT(OCALM, IGOALM, IGRALM), '2') = 0 AND INSTR(CONCAT(OCALM, IGOALM, IGRALM), '1') > 0 THEN 'WARN'
                END) AS STATE
         FROM
             F_SENSOR_LOG_2020
         WHERE
             REGDATE <![CDATA[<=]]> CONCAT(#{regdt}, ' 23:59:59')
             AND SNSRID = #{snsrid}
             AND <choose>
                     <when test='"check-danger,check-warn".equals(type)'>(OCALM + IGOALM + IGRALM) > 0</when>
                     <when test='"check-danger".equals(type)'>INSTR(CONCAT(OCALM, IGOALM, IGRALM), '2') > 0</when>
                     <when test='"check-warn".equals(type)'>
                     (INSTR(CONCAT(OCALM, IGOALM, IGRALM), '2') = 0 AND INSTR(CONCAT(OCALM, IGOALM, IGRALM), '1') > 0)
                     </when>
                 </choose>
         ORDER BY
             REGDATE DESC
         LIMIT
             #{pagelimit})
        LIMIT
            #{pagestart}, 1000
    </select>

    <select id="LIST_MCST_LOG_3DAYS_STAT" parameterType="map" resultType="map">
        SELECT
            DATE_FORMAT(A.DATETIME, '%m-%d') AS DATETIME
            , COALESCE(B.DANGER, 0) AS DANGER
            , COALESCE(B.WARN, 0) AS WARN
        FROM
            (SELECT CURDATE() - INTERVAL seq DAY DATETIME FROM seq_0_to_2) A
                LEFT JOIN
                    (SELECT
                         DATE(S.DATETIME) AS DATETIME
                         , SUM(S.DANGERCNT) AS DANGER
                         , SUM(S.WARNINGCNT) AS WARN
                     FROM
                         F_CRN_SNSR_ELEC_EVT_STAT S
                     WHERE
                         S.GUCODE LIKE '30%'
                         AND S.AREACODE = #{areacode}
                         AND S.STRCODE = #{strcode}
                         AND S.SNSRSEQ = (SELECT SNSRSEQ FROM F_SENSOR_INFO WHERE SNSRID = #{snsrid})
                         AND S.DATETIME > CURDATE() - INTERVAL 2 DAY
                     GROUP BY
                         DATE(S.DATETIME)
                    ) B
                        ON A.DATETIME = B.DATETIME
        GROUP BY
            DATE(A.DATETIME)
        ORDER BY
            DATETIME
    </select>

    <select id="LIST_MCST_LOG_WEEK_STAT" parameterType="map" resultType="map">
        SELECT
            DATE_FORMAT(A.DATETIME, '%m-%d') AS DATETIME
            , COALESCE(B.DANGER, 0) AS DANGER
            , COALESCE(B.WARN, 0) AS WARN
        FROM
            (SELECT CURDATE() - INTERVAL seq DAY DATETIME FROM seq_0_to_6) A
                LEFT JOIN
                    (SELECT
                         DATE(S.DATETIME) AS DATETIME
                         , SUM(S.DANGERCNT) AS DANGER
                         , SUM(S.WARNINGCNT) AS WARN
                     FROM
                         F_CRN_SNSR_ELEC_EVT_STAT S
                     WHERE
                         S.GUCODE LIKE '30%'
                         AND S.AREACODE = #{areacode}
                         AND S.STRCODE = #{strcode}
                         AND S.SNSRSEQ = (SELECT SNSRSEQ FROM F_SENSOR_INFO WHERE SNSRID = #{snsrid})
                         AND S.DATETIME > CURDATE() - INTERVAL 6 DAY
                     GROUP BY
                         DATE(S.DATETIME)
                    ) B
                        ON A.DATETIME = B.DATETIME
        GROUP BY
            DATE(A.DATETIME)
        ORDER BY
            DATETIME
    </select>

    <insert id="INSERT_MCST_SENSOR_CHECK" parameterType="map">
        INSERT INTO F_SENSOR_CHECK (CHECKSEQ, SNSRID, REGDATE, CHECKSTAT)
        VALUES (NULL, #{snsrid}, NOW(), 'ING')
    </insert>

    <update id="UPDATE_MCST_SENSOR_CHECK" parameterType="map">
        UPDATE
            F_SENSOR_CHECK
        SET
            PROCDATE  = NOW()
            , CHECKSTAT = 'END'
        WHERE
            SNSRID = #{snsrid}
            AND CHECKSTAT = 'ING'
    </update>

    <!--
    <select id="SELECT_MCST_LIST_MCST_STORE_SENSOR" parameterType="map" resultType="map">
        SELECT
            C.AREACODE, C.AREANAME, C2.AREACODE, C2.AREANAME, B.STRCODE, B.STRNAME
            , A.PANELNAME, A.SNSRID, A.SNSRSEQ, A.SNSRNICK, D.STATE, D.DATACNT, A.SVOL
            , A.SOC1V1, A.SOC1V2, A.SOC1T1, A.SOC1T2, A.SOC2V1, A.SOC2V2, A.SOC2T1, A.SOC2T2
            , A.SIGO1V, A.SIGO2V, A.SIGO1T, A.SIGO2T, A.SIGR1V, A.SIGR2V, A.SIGR1T, A.SIGR2T
        FROM
            F_SENSOR_INFO A
                LEFT JOIN
                    F_STORE B
                        ON A.AREACODE = B.AREACODE
                        AND A.STRCODE = B.STRCODE
                LEFT JOIN
                    F_LEVEL_AREA C
                        ON B.AREACODE = C.AREACODE
                LEFT JOIN
                    F_LEVEL_AREA C2
                        ON B.LEVELAREACODE = C2.AREACODE
                LEFT JOIN
                    (SELECT
                         SNSRID, MAX(DATACNT) AS DATACNT, MAX(STATE) AS STATE
                     FROM
                         (SELECT
                              SNSRID
                              , COUNT(*) AS DATACNT
                              , (CASE
                                     WHEN INSTR(CONCAT(MAX(OCALM), MAX(IGOALM), MAX(IGRALM)), '2') > 0 THEN '3'
                                     WHEN INSTR(CONCAT(MAX(OCALM), MAX(IGOALM), MAX(IGRALM)), '1') > 0 THEN '2'
                                END) AS STATE
                          FROM
                              F_SENSOR_LOG
                          WHERE
                              REGDATE > NOW() - INTERVAL 30 MINUTE
                          GROUP BY
                              SNSRID

                          UNION

                          SELECT
                              SNSRID
                              , COUNT(*) AS DATACNT
                              , (CASE WHEN COUNT(*) > 0 THEN '1' END) AS STATE
                          FROM
                              F_SENSOR_DATA
                          WHERE
                              SNSRRCVTIME > NOW() - INTERVAL 30 MINUTE
                          GROUP BY
                              SNSRID
                         ) A
                     GROUP BY
                         SNSRID
                     ORDER BY
                         2 DESC, SNSRID
                    ) D
                        ON A.SNSRID = D.SNSRID
        WHERE
            B.STRCODE = #{strcode}
            AND C.AREACODE = #{areacode}
        ORDER BY
            D.STATE DESC, D.DATACNT DESC, A.PANELNAME, B.STRNAME, A.SNSRNICK
    </select>
    -->

</mapper>