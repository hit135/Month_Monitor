<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.fscom.firsens.mng.repository.MMainRepo">

    <select id="SELECT_SENSOR_COUNT" parameterType="map" resultType="map">
        ( SELECT 'TODAY' AS TERM, 'TOTAL' AS TYPE, COUNT(DISTINCT SNSRID) AS CNT FROM F_SENSOR_INFO WHERE DELYN != 'Y' )
        UNION
        ( SELECT 'TODAY' AS TERM, 'DANGER' AS TYPE, COUNT(DISTINCT SNSRID) AS CNT
            FROM F_SENSOR_LOG
           WHERE REGDATE > DATE(NOW())
             AND INSTR(CONCAT(OCALM, IGOALM, IGRALM), '2') > 0 )
        UNION
        ( SELECT 'COUNT' AS TERN, 'DANGER' AS TYPE, COUNT(*) AS CNT
            FROM F_SENSOR_LOG
           WHERE REGDATE > DATE(NOW())
             AND INSTR(CONCAT(OCALM, IGOALM, IGRALM), '2') > 0 )
        UNION
        ( SELECT 'TODAY' AS TERN, 'WARN' AS TYPE, COUNT(DISTINCT SNSRID) AS CNT
            FROM F_SENSOR_LOG
           WHERE REGDATE > DATE(NOW())
             AND INSTR(CONCAT(OCALM, IGOALM, IGRALM), '1') > 0 )
        UNION
        ( SELECT 'COUNT' AS TERM, 'WARN' AS TYPE, COUNT(*) AS CNT
            FROM F_SENSOR_LOG
           WHERE REGDATE > DATE(NOW())
             AND INSTR(CONCAT(OCALM, IGOALM, IGRALM), '1') > 0 )
        UNION
        ( SELECT 'TODAY' AS TERM, 'DISCON' AS TYPE, COUNT(DISTINCT SNSRID) AS CNT
            FROM F_SENSOR_INFO
           WHERE DELYN != 'Y'
             AND DATARCVTIME <![CDATA[ < ]]> NOW() - INTERVAL 1 HOUR )
        ORDER BY TERM, TYPE
    </select>

    <select id="SELECT_AREA_LIST" parameterType="map" resultType="map">
        <![CDATA[
        ( SELECT 1                                                              AS LEVEL
               , A.GUCODE                                                       AS CODE
               , A.GUNAME                                                       AS NAME
               , IFNULL(COUNT(DISTINCT C.SNSRID), 0)                            AS SENSOR
               , IFNULL(COUNT(DISTINCT C.STRCODE), 0)                           AS STORE
               , IFNULL(SUM(D.DANGER), 0)                                       AS DANGER
               , IFNULL(SUM(E.WARN), 0)                                         AS WARN
               , COUNT(DISTINCT CASE WHEN F.SNSRID IS NULL THEN C.SNSRID END)   AS DISCON
               , NULL                                                           AS UPCODE
               , IFNULL(SUM(D.DANGER), 0) * 10000 + IFNULL(SUM(E.WARN), 0)      AS ORDERNUM
            FROM F_GUCODE A
                     LEFT JOIN ( SELECT * FROM F_LEVEL_AREA WHERE AREALEVEL = 1 AND DELYN != 'Y' ) B
                         ON A.GUCODE = B.GUCODE
                     LEFT JOIN ( SELECT * FROM F_SENSOR_INFO WHERE DELYN != 'Y' ) C
                         ON B.AREACODE = C.AREACODE
                     LEFT JOIN ( SELECT SNSRID, 1 AS DANGER
                                   FROM F_SENSOR_LOG
                                  WHERE REGDATE > DATE(NOW())
                                    AND INSTR(CONCAT(OCALM, IGOALM, IGRALM), '2') > 0
                                  GROUP BY SNSRID ) D
                         ON C.SNSRID = D.SNSRID
                     LEFT JOIN ( SELECT SNSRID, 1 AS WARN
                                   FROM F_SENSOR_LOG
                                  WHERE REGDATE > DATE(NOW())
                                    AND INSTR(CONCAT(OCALM, IGOALM, IGRALM), '1') > 0
                                  GROUP BY SNSRID ) E
                         ON C.SNSRID = E.SNSRID
                     LEFT JOIN ( SELECT SNSRID, COUNT(*) AS CONCOUNT
                                   FROM F_SENSOR_DATA
                                  WHERE SNSRRCVTIME > NOW() - INTERVAL 1 HOUR
                                  GROUP BY SNSRID ) F
                         ON C.SNSRID = F.SNSRID
           GROUP BY A.GUCODE, A.GUNAME )
        UNION
        ( SELECT 2                                                                  AS LEVEL
               , B.AREACODE                                                         AS CODE
               , B.AREANAME                                                         AS NAME
               , IFNULL(COUNT(DISTINCT C.SNSRID), 0)                                AS SENSOR
               , IFNULL(COUNT(DISTINCT C.STRCODE), 0)                               AS STORE
               , IFNULL(SUM(D.DANGER), 0)                                           AS DANGER
               , IFNULL(SUM(E.WARN), 0)                                             AS WARN
               , COUNT(DISTINCT CASE WHEN F.SNSRID IS NULL THEN C.SNSRID END)       AS DISCON
               , B.GUCODE                                                           AS UPCODE
               , 0 - (IFNULL(SUM(D.DANGER), 0) * 10000 + IFNULL(SUM(E.WARN), 0))    AS ORDERNUM
            FROM ( SELECT * FROM F_LEVEL_AREA WHERE AREALEVEL = 1 AND DELYN != 'Y' ) B
                    LEFT JOIN ( SELECT * FROM F_SENSOR_INFO WHERE DELYN != 'Y' ) C
                        ON B.AREACODE = C.AREACODE
                    LEFT JOIN ( SELECT SNSRID, 1 AS DANGER
                                  FROM F_SENSOR_LOG
                                 WHERE REGDATE > DATE(NOW())
                                   AND INSTR(CONCAT(OCALM, IGOALM, IGRALM), '2') > 0
                                 GROUP BY SNSRID ) D
                        ON C.SNSRID = D.SNSRID
                    LEFT JOIN ( SELECT SNSRID, 1 AS WARN
                                  FROM F_SENSOR_LOG
                                 WHERE REGDATE > DATE(NOW())
                                   AND INSTR(CONCAT(OCALM, IGOALM, IGRALM), '1') > 0
                                 GROUP BY SNSRID ) E
                        ON C.SNSRID = E.SNSRID
                    LEFT JOIN ( SELECT SNSRID, COUNT(*) AS CONCOUNT
                                  FROM F_SENSOR_DATA
                                 WHERE SNSRRCVTIME > NOW() - INTERVAL 1 HOUR
                                 GROUP BY SNSRID ) F
                        ON C.SNSRID = F.SNSRID
           GROUP BY B.AREACODE, B.AREANAME )
        ORDER BY LEVEL, ORDERNUM DESC
        ]]>
    </select>

    <select id="SELECT_SENSOR_LIST" parameterType="map" resultType="map">
        SELECT D.AREACODE, D.AREANAME, B.STRCODE, B.SNSRID, B.SNSRNICK, A.STATE, A.CNT
          FROM ( SELECT A.SNSRID, 'DANGER' AS STATE, COUNT(*) AS CNT
                   FROM F_SENSOR_LOG A
                  WHERE A.REGDATE > DATE(NOW())
                    AND INSTR(CONCAT(OCALM, IGOALM, IGRALM), '2') > 0
                  GROUP BY A.SNSRID
                  UNION
                 SELECT A.SNSRID, 'WARN' AS STATE, COUNT(*) AS CNT
                   FROM F_SENSOR_LOG A
                  WHERE A.REGDATE > DATE(NOW())
                    AND INSTR(CONCAT(OCALM, IGOALM, IGRALM), '1') > 0
                  GROUP BY A.SNSRID
                  UNION
                 SELECT A.SNSRID, 'BROKEN' AS STATE, COUNT(*) AS CNT
                   FROM F_SENSOR_LOG A
                            JOIN F_SENSOR_DATA B
                                ON A.DSEQ = B.DSEQ
                  WHERE A.REGDATE > DATE(NOW())
                    AND B.SNSRIGO > 50
                  GROUP BY A.SNSRID ) A
                    LEFT JOIN F_SENSOR_INFO B
                        ON A.SNSRID = B.SNSRID
                    LEFT JOIN F_STORE C
                        ON B.STRCODE = C.STRCODE
                    LEFT JOIN F_AREA D
                        ON B.AREACODE = D.AREACODE
         ORDER BY A.STATE, A.CNT DESC
    </select>

    <select id="SELECT_AREA_SENSOR_COUNT" parameterType="map" resultType="map">
        SELECT A.AREACODE
             , A.AREANAME
             , IFNULL(B.TOTAL, 0)  AS TOTAL
             , IFNULL(C.DANGER, 0) AS DANGER
             , IFNULL(D.WARN, 0)   AS WARN
             , IFNULL(E.DISCON, 0) AS DISCON
          FROM F_AREA A
                LEFT JOIN ( SELECT AREACODE, COUNT(DISTINCT SNSRID) AS TOTAL
                              FROM F_SENSOR_INFO
                             WHERE DELYN != 'Y'
                             GROUP BY AREACODE ) B
                    ON A.AREACODE = B.AREACODE
                LEFT JOIN ( SELECT AA.AREACODE, COUNT(DISTINCT BB.SNSRID) AS DANGER
                              FROM F_SENSOR_INFO AA
                                    LEFT JOIN F_SENSOR_LOG BB
                                        ON AA.SNSRID = BB.SNSRID
                             WHERE AA.DELYN != 'Y'
                               AND BB.REGDATE > DATE(NOW())
                               AND INSTR(CONCAT(BB.OCALM, BB.IGOALM, BB.IGRALM), '2') > 0
                             GROUP BY AA.AREACODE ) C
                    ON A.AREACODE = C.AREACODE
                LEFT JOIN ( SELECT AA.AREACODE, COUNT(DISTINCT BB.SNSRID) AS WARN
                              FROM F_SENSOR_INFO AA
                                    LEFT JOIN F_SENSOR_LOG BB
                                        ON AA.SNSRID = BB.SNSRID
                             WHERE AA.DELYN != 'Y'
                               AND BB.REGDATE > DATE(NOW())
                               AND INSTR(CONCAT(BB.OCALM, BB.IGOALM, BB.IGRALM), '1') > 0
                             GROUP BY AA.AREACODE ) D
                    ON A.AREACODE = D.AREACODE
                LEFT JOIN ( SELECT AREACODE, COUNT(DISTINCT SNSRID) AS DISCON
                              FROM F_SENSOR_INFO
                             WHERE DELYN != 'Y'
                               AND DATARCVTIME <![CDATA[ < ]]> NOW() - INTERVAL 1 HOUR
                             GROUP BY AREACODE ) E
                    ON A.AREACODE = E.AREACODE
         WHERE A.AREACODE = #{areacode}
    </select>

    <select id="SELECT_AREA_STORE_LIST" parameterType="map" resultType="map">
        SELECT E.AREACODE
             , E.STRCODE
             , E.STRNAME
             , IFNULL(SUM(C.DANGER), 0) AS DANGER
             , IFNULL(SUM(D.WARN), 0)   AS WARN
             , IFNULL(SUM(E.CON), 0)    AS CON
             , COUNT(DISTINCT A.SNSRID) AS SNSRCOUNT
          FROM F_SENSOR_INFO A
                LEFT JOIN F_STORE E
                    ON A.STRCODE = E.STRCODE
                LEFT JOIN ( SELECT SNSRID, COUNT(*) AS DANGER
                              FROM F_SENSOR_LOG
                             WHERE REGDATE > DATE(NOW())
                               AND INSTR(CONCAT(OCALM, IGOALM, IGRALM), '2') > 0
                             GROUP BY SNSRID ) C
                    ON A.SNSRID = C.SNSRID
                LEFT JOIN ( SELECT SNSRID, COUNT(*) AS WARN
                              FROM F_SENSOR_LOG
                             WHERE REGDATE > DATE(NOW())
                               AND INSTR(CONCAT(OCALM, IGOALM, IGRALM), '1') > 0
                             GROUP BY SNSRID ) D
                    ON A.SNSRID = D.SNSRID
                 LEFT JOIN ( SELECT SNSRID, COUNT(*) AS CON
                               FROM F_SENSOR_DATA
                              WHERE SNSRRCVTIME > NOW() - INTERVAL 1 HOUR
                              GROUP BY SNSRID ) E
                    ON A.SNSRID = E.SNSRID
         WHERE A.DELYN != 'Y'
           AND A.AREACODE = #{areacode}
         GROUP BY E.STRCODE, E.STRNAME
         ORDER BY 4 DESC, 5 DESC, 6 DESC, E.STRNAME
    </select>

    <select id="SELECT_AREA_SENSOR_LIST" parameterType="map" resultType="map">
        SELECT E.STRCODE
             , E.STRNAME
             , A.SNSRID
             , A.SNSRNICK
             , IFNULL(C.DANGER, 0)  AS DANGER
             , IFNULL(D.WARN, 0)    AS WARN
             , IFNULL(G.CON, 0)     AS CON
             , IFNULL(F.CHK, 0)     AS CHK
          FROM F_SENSOR_INFO A
                LEFT JOIN F_STORE E
                    ON A.AREACODE = E.AREACODE
                    AND A.STRCODE = E.STRCODE
                LEFT JOIN ( SELECT SNSRID, COUNT(*) AS DANGER
                              FROM F_SENSOR_LOG
                             WHERE REGDATE > DATE(NOW())
                               AND INSTR(CONCAT(OCALM, IGOALM, IGRALM), '2') > 0
                             GROUP BY SNSRID ) C
                    ON A.SNSRID = C.SNSRID
                LEFT JOIN ( SELECT SNSRID, COUNT(*) AS WARN
                               FROM F_SENSOR_LOG
                              WHERE REGDATE > DATE(NOW())
                                AND INSTR(CONCAT(OCALM, IGOALM, IGRALM), '1') > 0
                              GROUP BY SNSRID ) D
                    ON A.SNSRID = D.SNSRID
                LEFT JOIN ( SELECT SNSRID, COUNT(*) AS CHK
                              FROM F_SENSOR_CHECK
                             WHERE CHECKSTAT = 'ING'
                             GROUP BY SNSRID ) F
                    ON A.SNSRID = F.SNSRID
                LEFT JOIN ( SELECT SNSRID, COUNT(*) AS CON
                              FROM F_SENSOR_DATA
                             WHERE SNSRRCVTIME > NOW() - INTERVAL 1 HOUR
                             GROUP BY SNSRID ) G
                    ON A.SNSRID = G.SNSRID
         WHERE A.DELYN != 'Y'
           AND A.AREACODE = #{areacode}
           <if test="!@org.thymeleaf.util.StringUtils@isEmptyOrWhitespace(strcode)">
           AND A.STRCODE = #{strcode}
           </if>
         ORDER BY C.DANGER DESC, D.WARN DESC, G.CON DESC, A.SNSRID
    </select>

    <select id="SELECT_STORE_SEARCH" parameterType="map" resultType="map">
        SELECT A.AREACODE, B.AREANAME, A.STRCODE, A.STRNAME
          FROM F_STORE A
                LEFT JOIN F_AREA B
                    ON A.AREACODE = B.AREACODE
         WHERE A.STRNAME LIKE CONCAT('%', #{search}, '%')
         ORDER BY A.STRNAME
    </select>

    <select id="SELECT_CHECK_SENSOR_LIST" parameterType="map" resultType="map">
        SELECT D.AREACODE, D.AREANAME, B.STRCODE, B.SNSRID, B.SNSRNICK, A.STATE, A.CNT
          FROM ( SELECT A.SNSRID, 'CHECK' AS STATE
                      , COUNT(*) AS CNT
                   FROM F_SENSOR_CHECK A
                  WHERE A.CHECKSTAT = 'ING'
                  GROUP BY A.SNSRID ) A
                    LEFT JOIN F_SENSOR_INFO B
                        ON A.SNSRID = B.SNSRID
                    LEFT JOIN F_STORE C
                        ON B.STRCODE = C.STRCODE
                    LEFT JOIN F_AREA D
                        ON B.AREACODE = D.AREACODE
         ORDER BY A.STATE, A.CNT DESC
    </select>

    <select id="SELECT_MAIN_AREA_DATA_CHART" parameterType="map" resultType="map">
        SELECT '1'                                                              AS TYPE
             , CONCAT(SUBSTR(DATE_FORMAT(A.SNSRRCVTIME, '%H:%i'), 1, 4), '0')   AS RCVTIME
             , IFNULL(COUNT(*), 0)                                              AS CNT
          FROM F_SENSOR_DATA A
                LEFT JOIN F_SENSOR_INFO B
                    ON A.SNSRID = B.SNSRID
         WHERE ( A.SNSRRCVTIME <![CDATA[ < ]]> DATE(NOW()) AND A.SNSRRCVTIME > DATE(NOW() - INTERVAL 1 DAY) )
           AND B.DELYN != 'Y'
           AND B.AREACODE = #{areacode}
         GROUP BY 2
         UNION
        SELECT '2'                                                              AS TYPE
             , CONCAT(SUBSTR(DATE_FORMAT(A.SNSRRCVTIME, '%H:%i'), 1, 4), '0')   AS RCVTUNE
             , IFNULL(COUNT(*), 0)                                              AS CNT
          FROM F_SENSOR_DATA A
                LEFT JOIN F_SENSOR_INFO B
                    ON A.SNSRID = B.SNSRID
         WHERE A.SNSRRCVTIME > DATE(NOW())
           AND B.DELYN != 'Y'
           AND B.AREACODE = #{areacode}
         GROUP BY 2
         ORDER BY 1, 2
    </select>

    <select id="SELECT_MAIN_AREA_LOG_CHART" parameterType="map" resultType="map">
        SELECT '1'                                                          AS TYPE
             , CONCAT(SUBSTR(DATE_FORMAT(A.REGDATE, '%H:%i'), 1, 4), '0')   AS RCVTIME
             , IFNULL(COUNT(*), 0)                                          AS CNT
          FROM F_SENSOR_LOG A
                LEFT JOIN F_SENSOR_INFO B
                    ON A.SNSRID = B.SNSRID
         WHERE ( A.REGDATE <![CDATA[ < ]]> DATE(NOW()) AND A.REGDATE > DATE(NOW() - INTERVAL 1 DAY) )
           AND INSTR(CONCAT(OCALM, IGOALM, IGRALM), '2') > 0
           AND B.DELYN != 'Y'
           AND B.AREACODE = #{areacode}
         GROUP BY 2
         UNION
        SELECT '2'                                                          AS TYPE
             , CONCAT(SUBSTR(DATE_FORMAT(A.REGDATE, '%H:%i'), 1, 4), '0')   AS RCVTUNE
             , IFNULL(COUNT(*), 0)                                          AS CNT
          FROM F_SENSOR_LOG A
                LEFT JOIN F_SENSOR_INFO B
                    ON A.SNSRID = B.SNSRID
         WHERE A.REGDATE > DATE(NOW())
           AND INSTR(CONCAT(OCALM, IGOALM, IGRALM), '2') > 0
           AND B.DELYN != 'Y'
           AND B.AREACODE = #{areacode}
         GROUP BY 2
         ORDER BY 1, 2
    </select>

    <select id="SELECT_MAIN_AREA_DATA_CHART_WEEK" parameterType="map" resultType="map">
        SELECT '1'                          AS DATETYPE
             , SDATE                        AS RCVTIME
             , DAYOFWEEK(SDATE)             AS WEEK
             , IFNULL(SUM(SNSRKWHDAILY), 0) AS CNT
          FROM F_CRN_AREA_ELEC_DAILY_STAT
         WHERE SDATE <![CDATA[ < ]]> DATE(NOW() - INTERVAL (DAYOFWEEK(NOW()) - 1) DAY)
           AND SDATE > DATE(NOW() - INTERVAL (7 + DAYOFWEEK(NOW())) DAY)
           AND AREACODE = #{areacode}
         GROUP BY SDATE, AREACODE
         UNION
        SELECT '2'                          AS TYPE
             , SDATE                        AS RCVTIME
             , DAYOFWEEK(SDATE)             AS WEEK
             , IFNULL(SUM(SNSRKWHDAILY), 0) AS CNT
          FROM F_CRN_AREA_ELEC_DAILY_STAT
         WHERE SDATE > DATE(NOW() - INTERVAL DAYOFWEEK(NOW()) DAY)
           AND AREACODE = #{areacode}
         GROUP BY SDATE, AREACODE
         UNION
        SELECT '2'                              AS TYPE
             , DATE(NOW())                      AS RCVTIME
             , DAYOFWEEK(NOW())                 AS WEEK
             , IFNULL(SUM(USEKWH), 0)           AS CNT
          FROM ( SELECT A.SNSRID
                      , MAX(A.SNSRKWH) - MIN(A.SNSRKWH) AS USEKWH
                   FROM F_SENSOR_DATA A
                            LEFT JOIN F_SENSOR_INFO B
                                ON A.SNSRID = B.SNSRID
                  WHERE B.DELYN != 'Y'
                    AND B.AREACODE = #{areacode}
                    AND A.SNSRRCVTIME > DATE(NOW())
                  GROUP BY A.SNSRID ) Z
         ORDER BY 1, 2
    </select>

    <select id="SELECT_MAIN_AREA_LOG_CHART_WEEK" parameterType="map" resultType="map">
        SELECT '1'                      AS TYPE
             , DATE(A.REGDATE)          AS RCVTIME
             , DAYOFWEEK(A.REGDATE)     AS WEEK
             , IFNULL(COUNT(*), 0)      AS CNT
          FROM F_SENSOR_LOG_2021 A
                LEFT JOIN F_SENSOR_INFO B
                    ON A.SNSRID = B.SNSRID
         WHERE A.REGDATE <![CDATA[ < ]]> DATE(NOW() - INTERVAL (DAYOFWEEK(NOW()) - 1) DAY)
           AND A.REGDATE > DATE(NOW() - INTERVAL (7 + (DAYOFWEEK(NOW()) - 1)) DAY)
           AND INSTR(CONCAT(OCALM, IGOALM, IGRALM), '2') > 0
           AND B.DELYN != 'Y'
           AND B.AREACODE = #{areacode}
         GROUP BY 2
         UNION
        SELECT '1'                      AS TYPE
             , DATE(A.REGDATE)          AS RCVTIME
             , DAYOFWEEK(A.REGDATE)     AS WEEK
             , IFNULL(COUNT(*), 0)      AS CNT
          FROM F_SENSOR_LOG A
                LEFT JOIN F_SENSOR_INFO B
                    ON A.SNSRID = B.SNSRID
         WHERE A.REGDATE <![CDATA[ < ]]> DATE(NOW() - INTERVAL (DAYOFWEEK(NOW()) - 1) DAY)
           AND A.REGDATE > DATE(NOW() - INTERVAL (7 + (DAYOFWEEK(NOW()) - 1)) DAY)
           AND INSTR(CONCAT(OCALM, IGOALM, IGRALM), '2') > 0
           AND B.DELYN != 'Y'
           AND B.AREACODE = #{areacode}
         GROUP BY 2
         UNION
        SELECT '2'                      AS TYPE
             , DATE(A.REGDATE)          AS RCVTUNE
             , DAYOFWEEK(A.REGDATE)     AS WEEK
             , IFNULL(COUNT(*), 0)      AS CNT
          FROM F_SENSOR_LOG A
                LEFT JOIN F_SENSOR_INFO B
                    ON A.SNSRID = B.SNSRID
         WHERE A.REGDATE > DATE(NOW() - INTERVAL (DAYOFWEEK(NOW()) - 1) DAY)
           AND INSTR(CONCAT(OCALM, IGOALM, IGRALM), '2') > 0
           AND B.DELYN != 'Y'
           AND B.AREACODE = #{areacode}
         GROUP BY 2
         ORDER BY 1, 2
    </select>

    <select id="SELECT_MAIN_AREA_MAP_SENSOR_LIST" parameterType="map" resultType="map">
        SELECT B.STRCODE
             , B.STRNAME
             , A.SNSRID
             , A.SNSRNICK
             , B.STRPOSLAT
             , B.STRPOSLON
             , ( CASE WHEN C.CNT > 0 THEN 'danger' WHEN D.CNT > 0 THEN 'warning'
                      WHEN E.CNT > 0 THEN 'normal' ELSE 'discon'
               END ) AS STATE
          FROM F_SENSOR_INFO A
                LEFT JOIN F_STORE B
                    ON A.AREACODE = B.AREACODE
                    AND A.STRCODE = B.STRCODE
                LEFT JOIN ( SELECT SNSRID, IFNULL(COUNT(*), 0) AS CNT
                              FROM F_SENSOR_LOG
                             WHERE REGDATE > DATE(NOW())
                               AND INSTR(CONCAT(OCALM, IGOALM, IGRALM), '2') > 0
                             GROUP BY SNSRID ) C
                    ON A.SNSRID = C.SNSRID
                LEFT JOIN ( SELECT SNSRID, IFNULL(COUNT(*), 0) AS CNT
                              FROM F_SENSOR_LOG
                             WHERE REGDATE > DATE(NOW())
                               AND INSTR(CONCAT(OCALM, IGOALM, IGRALM), '1') > 0
                             GROUP BY SNSRID ) D
                    ON A.SNSRID = D.SNSRID
                LEFT JOIN ( SELECT SNSRID, IFNULL(COUNT(*), 0) AS CNT
                              FROM F_SENSOR_DATA
                             WHERE SNSRRCVTIME > NOW() - INTERVAL 1 HOUR
                             GROUP BY SNSRID ) E
                    ON A.SNSRID = E.SNSRID
         WHERE A.DELYN != 'Y'
           AND B.DELYN != 'Y'
           AND A.AREACODE = #{areacode}
         ORDER BY C.CNT DESC, D.CNT DESC, E.CNT DESC, B.STRNAME
    </select>

</mapper>
