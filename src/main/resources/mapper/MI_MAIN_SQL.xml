<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.fscom.firsens.mng.incheon.repository.MIMainRepo">

    <!-- 종합 현황 (전체, 경고, 주의, 끊김) -->
    <select id="LIST_MIM_TODAY_TOTAL" parameterType="map" resultType="map">
        <![CDATA[
        SELECT
            'TODAY' TERM
             , B.TYPE
             , B.ORDERNUM
             , (CASE
                    WHEN B.TYPE = 'TOTAL' THEN A.TOTAL
                    WHEN B.TYPE = 'DISCON' THEN A.DISCON
            END) AS CNT
        FROM
            (SELECT
                 SUM(SNSRCNT) AS TOTAL, SUM(SNSRDISNCNT) AS DISCON
             FROM
                 V_ALL_AREA_MAP
             WHERE
                 GRPGUCODE = '032|28'
            ) A
                CROSS JOIN (SELECT 'TOTAL' AS TYPE, 1 AS ORDERNUM
                            UNION ALL SELECT 'DISCON', 2) B
        GROUP BY
            B.TYPE

        UNION

        SELECT
            B.TERM
             , B.TYPE
             , B.ORDERNUM
             , (CASE
                    WHEN CONCAT(B.TERM, B.TYPE) = 'TODAYWARN' THEN A.TODAYWARN
                    WHEN CONCAT(B.TERM, B.TYPE) = 'TODAYDANGER' THEN A.TODAYDANGER
                    WHEN CONCAT(B.TERM, B.TYPE) = 'COUNTWARN' THEN A.COUNTWARN
                    WHEN CONCAT(B.TERM, B.TYPE) = 'COUNTDANGER' THEN A.COUNTDANGER
            END) AS CNT
        FROM
            (SELECT
                 COUNT(DISTINCT CASE WHEN ISWARN = 1 THEN SNSRSEQ END) AS TODAYWARN
                 , COUNT(DISTINCT CASE WHEN ISDANGER = 1 THEN SNSRSEQ END) AS TODAYDANGER
                 , COALESCE(SUM(ISWARN), 0) AS COUNTWARN
                 , COALESCE(SUM(ISDANGER), 0) AS COUNTDANGER
             FROM
                 V_TODAY_SENSOR_LOG_MAP
             WHERE
                 GRPGUCODE = '032|28'
            ) A
                CROSS JOIN (SELECT 'TODAY' AS TERM, 'WARN' AS TYPE, 3 AS ORDERNUM
                            UNION ALL SELECT 'COUNT', 'WARN', 4
                            UNION ALL SELECT 'TODAY', 'DANGER', 5
                            UNION ALL SELECT 'COUNT', 'DANGER', 6) B
        GROUP BY
            B.TERM, B.TYPE
        ORDER BY
            ORDERNUM
        ]]>
    </select>

    <!-- 구별, 시장별 현황 (상점, 센서, 경고, 주의, 끊김) -->
    <select id="LIST_MIM_TODAY_GU_AREA" parameterType="map" resultType="map">
        SELECT
            1 AS LEVEL
            , GUCODE AS CODE
            , GUNAME AS NAME
            , SNSRCNT AS SENSOR
            , STRCNT AS STORE
            , SUM(DANGERSNSRCNT) AS DANGER
            , SUM(WARNSNSRCNT) AS WARN
            , SUM(SNSRDISNCNT) AS DISCON
            , NULL AS UPCODE
            , SUM(DANGERCNT) * 10000 + SUM(WARNCNT) AS ORDERNUM
        FROM
            V_ALL_AREA_MAP
        WHERE
            GRPGUCODE = '032|28'
        GROUP BY
            GUCODE

        UNION

        SELECT
            2 AS LEVEL
            , AREACODE AS CODE
            , AREANAME AS NAME
            , SNSRCNT AS SENSOR
            , STRCNT AS STORE
            , DANGERSNSRCNT AS DANGER
            , WARNSNSRCNT AS WARN
            , SNSRDISNCNT AS DISCON
            , GUCODE AS UPCODE
            , 0 - (DANGERCNT * 10000 + WARNCNT) AS ORDERNUM
        FROM
            V_ALL_AREA_MAP
        WHERE
            GRPGUCODE = '032|28'
        ORDER BY
            LEVEL, ORDERNUM DESC
    </select>

    <!-- 점검내역 목록 -->
    <select id="LIST_MIM_TODAY_CHK_SNSR" parameterType="map" resultType="map">
        SELECT
            D.AREACODE, D.AREANAME, B.STRCODE, B.SNSRID, B.SNSRNICK, A.STATE, A.CNT
        FROM
            (SELECT
                 A.SNSRID, 'CHECK' AS STATE, COUNT(*) AS CNT
             FROM
                 F_SENSOR_CHECK A
             WHERE
                 A.CHECKSTAT = 'ING'
             GROUP BY
                 A.SNSRID
            ) A
                LEFT JOIN F_SENSOR_INFO B
                    ON A.SNSRID = B.SNSRID
                LEFT JOIN F_STORE C
                    ON B.STRCODE = C.STRCODE
                LEFT JOIN F_LEVEL_AREA D
                    ON C.AREACODE = D.AREACODE
        WHERE
            B.DELYN = 'N'
            AND CONCAT(C.GRPCODE, C.USEYN, C.DELYN) = '032YN'
            AND CONCAT(D.AREALEVEL, D.DELYN, D.GUCODE) = '1N28'
        ORDER BY
            A.STATE, A.CNT DESC
    </select>

    <!-- 상태이상 센서 목록 -->
    <select id="LIST_MIM_TODAY_ABNOMAL_SNSR" parameterType="map" resultType="map">
        SELECT
            S.AREACODE, S.AREANAME, S.STRCODE, S.SNSRSEQ, S.SNSRNICK, S.STATE, S.CNT
        FROM
            (SELECT
                 A.AREACODE
                 , A.AREANAME
                 , A.STRCODE
                 , A.SNSRSEQ
                 , A.SNSRNICK
                 , B.STATE
                 , (CASE
                        WHEN B.STATE = 'DANGER' THEN COALESCE(SUM(A.ISDANGER), 0)
                        WHEN B.STATE = 'WARN' THEN COALESCE(SUM(A.ISWARN), 0)
                        WHEN B.STATE = 'BROKEN'
                            THEN COUNT(CASE WHEN EXISTS (SELECT DSEQ FROM F_SENSOR_DATA WHERE DSEQ = A.DSEQ AND SNSRIGO > 50) THEN A.DSEQ END)
                   END) AS CNT
             FROM
                 (SELECT
                      AREACODE, AREANAME, STRCODE, SNSRNICK, SNSRSEQ, DSEQ, LSEQ, ISDANGER, ISWARN
                  FROM
                      V_TODAY_SENSOR_LOG_MAP
                  WHERE
                      GRPGUCODE = '032|28'
                 ) A
                     CROSS JOIN (SELECT 'DANGER' AS STATE
                                 UNION ALL SELECT 'WARN'
                                 UNION ALL SELECT 'BROKEN') B
             GROUP BY
                 A.AREACODE, A.STRCODE, A.SNSRSEQ, B.STATE) S
        WHERE
            S.CNT > 0
        ORDER BY
            S.STATE, S.CNT DESC
    </select>

    <!-- 시장 현황 (전체, 경고, 주의, 끊김) -->
    <!--
    <select id="LIST_MIM_TODAY_AREA" parameterType="map" resultType="map">
        SELECT
            AREACODE
            , AREANAME
            , STRCNT AS TOTAL
            , SNSRDISNCNT AS DISCON
            , AS DANGERCNT AS DANGER
            , AS WARNCNT AS WARN
        FROM
            V_ALL_AREA_MAP
        WHERE
            GRPGUCODE = '032|28'
            AND AREACODE = #{areacode}
    </select>
    -->

    <!-- 시장별 어제/오늘 데이터 추이 -->
    <select id="LIST_MIM_AREA_DATA_CHART" parameterType="map" resultType="map">
        SELECT
            '1' AS TYPE
            , CONCAT(SUBSTR(DATE_FORMAT(A.SNSRRCVTIME, '%H:%i'), 1, 4), '0') AS RCVTIME
            , COUNT(*) AS CNT
        FROM
            (SELECT
                 SNSRID, SNSRRCVTIME
             FROM <choose>
                      <when test="day == 1">F_SENSOR_DATA_2021</when>
                      <otherwise>F_SENSOR_DATA</otherwise>
                  </choose>
             WHERE
                 SNSRRCVTIME <![CDATA[<]]> CURDATE() AND SNSRRCVTIME > CURDATE() - INTERVAL 1 DAY
            ) A
                LEFT JOIN F_SENSOR_INFO B
                    ON A.SNSRID = B.SNSRID
                LEFT JOIN F_LEVEL_AREA C
                    ON B.AREACODE = C.AREACODE
        WHERE
            B.DELYN = 'N'
            AND CONCAT(C.AREALEVEL, C.DELYN, C.GUCODE) = '1N28'
            AND C.AREACODE = #{areacode}
        GROUP BY
            2

        UNION

        SELECT
            '2' AS TYPE
            , CONCAT(SUBSTR(DATE_FORMAT(A.SNSRRCVTIME, '%H:%i'), 1, 4), '0') AS RCVTUNE
            , COUNT(*) AS CNT
        FROM
            (SELECT SNSRID, SNSRRCVTIME FROM F_SENSOR_DATA WHERE SNSRRCVTIME > CURDATE()) A
                LEFT JOIN F_SENSOR_INFO B
                    ON A.SNSRID = B.SNSRID
                LEFT JOIN F_LEVEL_AREA C
                    ON B.AREACODE = C.AREACODE
        WHERE
            B.DELYN = 'N'
            AND CONCAT(C.AREALEVEL, C.DELYN, C.GUCODE) = '1N28'
            AND C.AREACODE = #{areacode}
        GROUP BY
            2
        ORDER BY
            TYPE, RCVTIME
    </select>

    <!-- 시장별 어제/오늘 경보 발생 추이 -->
    <select id="LIST_MIM_AREA_LOG_CHART" parameterType="map" resultType="map">
        SELECT
            '1' AS TYPE
            , CONCAT(SUBSTR(DATE_FORMAT(A.REGDATE, '%H:%i'), 1, 4), '0') AS RCVTIME
            , COUNT(*) AS CNT
        FROM
            (SELECT
                 SNSRID, REGDATE
             FROM <choose>
                      <when test="day == 1">F_SENSOR_LOG_2021 A</when>
                      <otherwise>F_SENSOR_LOG A</otherwise>
                  </choose>
             WHERE
                 REGDATE <![CDATA[<]]> CURDATE() AND REGDATE > CURDATE() - INTERVAL 1 DAY
                 AND INSTR(CONCAT(OCALM, IGOALM, IGRALM), '2') > 0
            ) A
                LEFT JOIN F_SENSOR_INFO B
                    ON A.SNSRID = B.SNSRID
                LEFT JOIN F_LEVEL_AREA C
                    ON B.AREACODE = C.AREACODE
        WHERE
            B.DELYN = 'N'
            AND CONCAT(C.AREALEVEL, C.DELYN, C.GUCODE) = '1N28'
            AND C.AREACODE = #{areacode}
        GROUP BY
            2

        UNION

        SELECT
            '2' AS TYPE
            , CONCAT(SUBSTR(DATE_FORMAT(A.REGDATE, '%H:%i'), 1, 4), '0') AS RCVTUNE
            , COUNT(*) AS CNT
        FROM
            (SELECT
                 SNSRID, REGDATE
             FROM
                 F_SENSOR_LOG
             WHERE
                 REGDATE > CURDATE()
                 AND INSTR(CONCAT(OCALM, IGOALM, IGRALM), '2') > 0
            ) A
                LEFT JOIN F_SENSOR_INFO B
                    ON A.SNSRID = B.SNSRID
                LEFT JOIN F_LEVEL_AREA C
                    ON B.AREACODE = C.AREACODE
        WHERE
            B.DELYN = 'N'
            AND CONCAT(C.AREALEVEL, C.DELYN, C.GUCODE) = '1N28'
            AND C.AREACODE = #{areacode}
        GROUP BY
            2
        ORDER BY
            TYPE, RCVTIME
    </select>

    <!-- 분전반 센서 상태 현황 -->
    <select id="LIST_MIM_CURR_SNSR_STATE" parameterType="map" resultType="map">
        <![CDATA[
        SELECT
            SUBSTR(I.SNSRID FROM -4) AS SNSRID
            , I.SNSRNICK
            , (CASE
                   WHEN L.DANGERCNT > 0 THEN 'DANGER'
                   WHEN L.DANGERCNT = 0 AND L.WARNCNT > 0 THEN 'WARN'
                   WHEN I.DATARCVTIME < NOW() - INTERVAL 1 HOUR THEN 'DISCONN'
                   ELSE 'NORMAL'
               END) AS STATE
        FROM
            (SELECT
                 A.SNSRID, A.STRCODE, A.SNSRNICK, A.DATARCVTIME
             FROM
                 F_SENSOR_INFO A
                     LEFT JOIN F_STORE S
                         ON A.STRCODE = S.STRCODE
             WHERE
                 A.DELYN = 'N'
                 AND CONCAT(S.USEYN, S.DELYN, S.GRPCODE) = 'YN032'
            ) I
                LEFT JOIN (SELECT
                               SNSRID
                               , COUNT(DISTINCT CASE WHEN INSTR(CONCAT(OCALM, IGOALM, IGRALM), '2') > 0 THEN LSEQ END) AS DANGERCNT
                               , COUNT(DISTINCT CASE WHEN INSTR(CONCAT(OCALM, IGOALM, IGRALM), '1') > 0 THEN LSEQ END) AS WARNCNT
                           FROM
                               F_SENSOR_LOG
                           WHERE
                               REGDATE > CURDATE()
                           GROUP BY
                               SNSRID) L
                    ON I.SNSRID = L.SNSRID
        ]]>
    </select>

    <select id="LIST_MIM_CURR_SNSR_RST_DATA" parameterType="map" resultType="map">
        SELECT
            'R' AS TYPE
            , ROUND(SUM(A.SNSRIGO), 2) AS SNSRIGO
            , ROUND(SUM(A.SNSRIGR), 2) AS SNSRIGR
            , ROUND(SUM(A.SNSRIGC), 2) AS SNSRIGC
            , ROUND(SUM(A.SNSRAMPERE), 2) AS SNSRAMPERE
            , ROUND(AVG(A.SNSRVOLT), 2) AS SNSRVOLT
            , ROUND(SUM(A.SNSRKWH), 1) AS SNSRKWH
        FROM
            (SELECT
                 D.SNSRIGO, D.SNSRIGR, D.SNSRIGC, D.SNSRAMPERE, D.SNSRVOLT, D.SNSRKWH, D.SNSRRSSI, I.RSTTYPE
             FROM
                 F_SENSOR_DATA D
                     LEFT JOIN F_SENSOR_INFO I
                         ON D.SNSRID = I.SNSRID
                     LEFT JOIN F_STORE S
                         ON I.STRCODE = S.STRCODE
             WHERE
                 D.ISSIMUL = 0
                 AND D.DSEQ = (SELECT MAX(DSEQ) FROM F_SENSOR_DATA WHERE SNSRID = D.SNSRID)
                 AND CONCAT(I.DELYN, I.RSTTYPE) = 'NR'
                 AND CONCAT(S.USEYN, S.DELYN, S.GRPCODE) = 'YN032'
              GROUP BY
                  I.SNSRSEQ
              ORDER BY
                  I.SNSRID) A

        UNION ALL

        SELECT
            'S' AS TYPE
            , ROUND(SUM(A.SNSRIGO), 2) AS SNSRIGO
            , ROUND(SUM(A.SNSRIGR), 2) AS SNSRIGR
            , ROUND(SUM(A.SNSRIGC), 2) AS SNSRIGC
            , ROUND(SUM(A.SNSRAMPERE), 2) AS SNSRAMPERE
            , ROUND(AVG(A.SNSRVOLT), 2) AS SNSRVOLT
            , ROUND(SUM(A.SNSRKWH), 1) AS SNSRKWH
        FROM
            (SELECT
                 D.SNSRIGO, D.SNSRIGR, D.SNSRIGC, D.SNSRAMPERE, D.SNSRVOLT, D.SNSRKWH, D.SNSRRSSI, I.RSTTYPE
             FROM
                 F_SENSOR_DATA D
                     LEFT JOIN F_SENSOR_INFO I
                         ON D.SNSRID = I.SNSRID
                     LEFT JOIN F_STORE S
                         ON I.STRCODE = S.STRCODE
             WHERE
                 D.ISSIMUL = 0
                 AND D.DSEQ = (SELECT MAX(DSEQ) FROM F_SENSOR_DATA WHERE SNSRID = D.SNSRID)
                 AND CONCAT(I.DELYN, I.RSTTYPE) = 'NS'
                 AND CONCAT(S.USEYN, S.DELYN, S.GRPCODE) = 'YN032'
             GROUP BY
                 I.SNSRSEQ
             ORDER BY
                 I.SNSRID) A

        UNION ALL

        SELECT
            'T' AS TYPE
            , ROUND(SUM(A.SNSRIGO), 2) AS SNSRIGO
            , ROUND(SUM(A.SNSRIGR), 2) AS SNSRIGR
            , ROUND(SUM(A.SNSRIGC), 2) AS SNSRIGC
            , ROUND(SUM(A.SNSRAMPERE), 2) AS SNSRAMPERE
            , ROUND(AVG(A.SNSRVOLT), 2) AS SNSRVOLT
            , ROUND(SUM(A.SNSRKWH), 1) AS SNSRKWH
        FROM
            (SELECT
                 D.SNSRIGO, D.SNSRIGR, D.SNSRIGC, D.SNSRAMPERE, D.SNSRVOLT, D.SNSRKWH, D.SNSRRSSI, I.RSTTYPE
             FROM
                 F_SENSOR_DATA D
                     LEFT JOIN F_SENSOR_INFO I
                         ON D.SNSRID = I.SNSRID
                     LEFT JOIN F_STORE S
                         ON I.STRCODE = S.STRCODE
             WHERE
                 D.ISSIMUL = 0
                 AND D.DSEQ = (SELECT MAX(DSEQ) FROM F_SENSOR_DATA WHERE SNSRID = D.SNSRID)
                 AND CONCAT(I.DELYN, I.RSTTYPE) = 'NT'
                 AND CONCAT(S.USEYN, S.DELYN, S.GRPCODE) = 'YN032'
             GROUP BY
                 I.SNSRSEQ
             ORDER BY
                 I.SNSRID) A

        UNION ALL

        SELECT
            'Total' AS TYPE
            , ROUND(SUM(A.SNSRIGO), 2) AS SNSRIGO
            , ROUND(SUM(A.SNSRIGR), 2) AS SNSRIGR
            , ROUND(SUM(A.SNSRIGC), 2) AS SNSRIGC
            , ROUND(SUM(A.SNSRAMPERE), 2) AS SNSRAMPERE
            , ROUND(AVG(A.SNSRVOLT), 2) AS SNSRVOLT
            , ROUND(SUM(A.SNSRKWH), 1) AS SNSRKWH
        FROM
            (SELECT
                 D.SNSRIGO, D.SNSRIGR, D.SNSRIGC, D.SNSRAMPERE, D.SNSRVOLT, D.SNSRKWH, D.SNSRRSSI, I.RSTTYPE
             FROM
                 F_SENSOR_DATA D
                     LEFT JOIN F_SENSOR_INFO I
                         ON D.SNSRID = I.SNSRID
                     LEFT JOIN F_STORE S
                         ON I.STRCODE = S.STRCODE
             WHERE
                 D.ISSIMUL = 0
                 AND D.DSEQ = (SELECT MAX(DSEQ) FROM F_SENSOR_DATA WHERE SNSRID = D.SNSRID)
                 AND I.DELYN = 'N'
                 AND CONCAT(S.USEYN, S.DELYN, S.GRPCODE) = 'YN032'
             GROUP BY
                 I.SNSRSEQ
             ORDER BY
                 I.SNSRID) A
    </select>

    <select id="LIST_MIM_CURR_SNSR_DATA" parameterType="map" resultType="map">
        SELECT
            I.SNSRNICK
            , ROUND(D.SNSRIGO, 2) AS SNSRIGO
            , ROUND(D.SNSRIGR, 2) AS SNSRIGR
            , ROUND(D.SNSRIGC, 2) AS SNSRIGC
            , ROUND(D.SNSRAMPERE, 2) AS SNSRAMPERE
            , ROUND(D.SNSRVOLT, 2) AS SNSRVOLT
            , ROUND(D.SNSRKWH, 1) AS SNSRKWH
            , D.SNSRRSSI
        FROM
            F_SENSOR_DATA D
                LEFT JOIN F_SENSOR_INFO I
                    ON D.SNSRID = I.SNSRID
                LEFT JOIN F_STORE S
                    ON I.STRCODE = S.STRCODE
        WHERE
            D.ISSIMUL = 0
            AND D.DSEQ = (SELECT MAX(DSEQ) FROM F_SENSOR_DATA WHERE SNSRID = D.SNSRID)
            AND I.DELYN = 'N'
            AND CONCAT(S.USEYN, S.DELYN, S.GRPCODE) = 'YN032'
        GROUP BY
            I.SNSRSEQ
        ORDER BY
            I.SNSRID
    </select>

</mapper>
