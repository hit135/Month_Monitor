<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.fscom.firsens.mng.challenge.repository.MCMainRepo">

    <select id="LIST_MCM_SENSOR_CNT" parameterType="map" resultType="map">
        (SELECT
             D.TERM
             , D.TYPE
             , D.ORDERNUM
             , (CASE
                    WHEN D.TYPE = 'TOTAL' THEN COUNT(DISTINCT I.SNSRID)
                    WHEN D.TYPE = 'DISCON' THEN COUNT(DISTINCT CASE WHEN I.DATARCVTIME <![CDATA[ < ]]> NOW() - INTERVAL 1 HOUR THEN I.SNSRID END)
                END) AS CNT
         FROM
             (SELECT STRCODE, SNSRID, DATARCVTIME FROM F_SENSOR_INFO WHERE CONCAT(DELYN, AREACODE) LIKE 'NAREA_%') I
                 INNER JOIN (SELECT STRCODE FROM F_STORE WHERE CONCAT(GRPCODE, USEYN, DELYN) = '042YN') S
                     ON I.STRCODE = S.STRCODE
                 CROSS JOIN (SELECT 'TODAY' AS TERM, 'TOTAL' AS TYPE, 1 AS ORDERNUM
                             UNION ALL SELECT 'TODAY' AS TERN, 'DISCON' AS TYPE, 2 AS ORDERNUM) D
         GROUP BY
             D.TERM, D.TYPE)

        UNION

        (SELECT
             D.TERM
             , D.TYPE
             , D.ORDERNUM
             , (CASE
                    WHEN D.TERM = 'TODAY' AND D.TYPE = 'WARN' THEN COUNT(DISTINCT CASE WHEN INSTR(A.ALM, '1') > 0 THEN A.SNSRID END)
                    WHEN D.TERM = 'COUNT' AND D.TYPE = 'WARN' THEN COUNT(CASE WHEN INSTR(A.ALM, '1') > 0 THEN A.LSEQ END)
                    WHEN D.TERM = 'TODAY' AND D.TYPE = 'DANGER' THEN COUNT(DISTINCT CASE WHEN INSTR(A.ALM, '2') > 0 THEN A.SNSRID END)
                    WHEN D.TERM = 'COUNT' AND D.TYPE = 'DANGER' THEN COUNT(CASE WHEN INSTR(A.ALM, '2') > 0 THEN A.LSEQ END)
                END) AS CNT
         FROM
             (SELECT
                  LSEQ, SNSRID, CONCAT(OCALM, IGOALM, IGRALM) AS ALM
              FROM
                  F_SENSOR_LOG
              WHERE
                  REGDATE > CURDATE()
                  AND OCALM + IGOALM + IGRALM > 0
             ) A
                 INNER JOIN (SELECT STRCODE, SNSRID FROM F_SENSOR_INFO WHERE CONCAT(DELYN, AREACODE) LIKE 'NAREA_%') B
                     ON A.SNSRID = B.SNSRID
                 INNER JOIN (SELECT STRCODE FROM F_STORE WHERE CONCAT(GRPCODE, USEYN, DELYN) = '042YN') C
                     ON B.STRCODE = C.STRCODE
                 CROSS JOIN (SELECT 'TODAY' AS TERM, 'WARN' AS TYPE, 3 AS ORDERNUM
                             UNION ALL SELECT 'COUNT' AS TERN, 'WARN' AS TYPE, 4 AS ORDERNUM
                             UNION ALL SELECT 'TODAY' AS TERM, 'DANGER' AS TYPE, 5 AS ORDERNUM
                             UNION ALL SELECT 'COUNT' AS TERN, 'DANGER' AS TYPE, 6 AS ORDERNUM) D
         GROUP BY
             D.TERM, D.TYPE)
        ORDER BY
            ORDERNUM
    </select>

    <select id="LIST_MCM_AREA" parameterType="map" resultType="map">
        <![CDATA[
        SELECT
            1 AS LEVEL
            , A.GUCODE AS CODE
            , A.GUNAME AS NAME
            , IFNULL(COUNT(DISTINCT C.SNSRID), 0) AS SENSOR
            , IFNULL(COUNT(DISTINCT C.STRCODE), 0) AS STORE
            , IFNULL(SUM(D.DANGER), 0) AS DANGER
            , IFNULL(SUM(E.WARN), 0) AS WARN
            , COUNT(DISTINCT CASE WHEN F.SNSRID IS NULL THEN C.SNSRID END) AS DISCON
            , NULL AS UPCODE
            , IFNULL(SUM(D.DANGER), 0) * 10000 + IFNULL(SUM(E.WARN), 0) AS ORDERNUM
        FROM
            (SELECT GUCODE, GUNAME FROM F_GUCODE WHERE CONCAT(USEYN, GUCODE) LIKE 'Y30%') A
                LEFT JOIN (SELECT GUCODE, AREACODE FROM F_LEVEL_AREA WHERE CONCAT(AREALEVEL, DELYN, GUCODE) LIKE '1N30%') B
                    ON A.GUCODE = B.GUCODE
                LEFT JOIN (SELECT AREACODE, STRCODE, SNSRID FROM F_SENSOR_INFO WHERE DELYN = 'N') C
                    ON B.AREACODE = C.AREACODE
                LEFT JOIN (SELECT
                               SNSRID, 1 AS DANGER
                           FROM
                               F_SENSOR_LOG
                           WHERE
                               REGDATE > CURDATE()
                               AND INSTR(CONCAT(OCALM, IGOALM, IGRALM), '2') > 0
                           GROUP BY
                               SNSRID) D
                    ON C.SNSRID = D.SNSRID
                LEFT JOIN (SELECT
                               SNSRID, 1 AS WARN
                           FROM
                               F_SENSOR_LOG
                           WHERE
                               REGDATE > CURDATE()
                               AND INSTR(CONCAT(OCALM, IGOALM, IGRALM), '1') > 0
                           GROUP BY
                               SNSRID) E
                    ON C.SNSRID = E.SNSRID
                LEFT JOIN (SELECT
                               SNSRID, COUNT(*) AS CONCOUNT
                           FROM
                               F_SENSOR_DATA
                           WHERE
                               SNSRRCVTIME > NOW() - INTERVAL 1 HOUR
                           GROUP BY
                               SNSRID) F
                    ON C.SNSRID = F.SNSRID
        GROUP BY
            A.GUCODE, A.GUNAME

        UNION

        SELECT
            2 AS LEVEL
            , B.AREACODE AS CODE
            , B.AREANAME AS NAME
            , IFNULL(COUNT(DISTINCT C.SNSRID), 0) AS SENSOR
            , IFNULL(COUNT(DISTINCT C.STRCODE), 0) AS STORE
            , IFNULL(SUM(D.DANGER), 0) AS DANGER
            , IFNULL(SUM(E.WARN), 0) AS WARN
            , COUNT(DISTINCT CASE WHEN F.SNSRID IS NULL THEN C.SNSRID END) AS DISCON
            , B.GUCODE AS UPCODE
            , 0 - (IFNULL(SUM(D.DANGER), 0) * 10000 + IFNULL(SUM(E.WARN), 0)) AS ORDERNUM
        FROM
            (SELECT GUCODE, AREACODE, AREANAME FROM F_LEVEL_AREA WHERE CONCAT(AREALEVEL, DELYN, GUCODE) LIKE '1N30%') B
                LEFT JOIN (SELECT AREACODE, STRCODE, SNSRID FROM F_SENSOR_INFO WHERE CONCAT(DELYN, AREACODE) LIKE 'NAREA_%') C
                   ON B.AREACODE = C.AREACODE
                LEFT JOIN (SELECT
                               SNSRID, 1 AS DANGER
                           FROM
                               F_SENSOR_LOG
                           WHERE
                               REGDATE > CURDATE()
                               AND INSTR(CONCAT(OCALM, IGOALM, IGRALM), '2') > 0
                           GROUP BY
                               SNSRID) D
                   ON C.SNSRID = D.SNSRID
                LEFT JOIN (SELECT
                               SNSRID, 1 AS WARN
                           FROM
                               F_SENSOR_LOG
                           WHERE
                               REGDATE > CURDATE()
                               AND INSTR(CONCAT(OCALM, IGOALM, IGRALM), '1') > 0
                           GROUP BY
                               SNSRID) E
                   ON C.SNSRID = E.SNSRID
                LEFT JOIN (SELECT
                               SNSRID, COUNT(*) AS CONCOUNT
                           FROM
                               F_SENSOR_DATA
                           WHERE
                               SNSRRCVTIME > NOW() - INTERVAL 1 HOUR
                           GROUP BY
                               SNSRID) F
                   ON C.SNSRID = F.SNSRID
        GROUP BY
            B.AREACODE, B.AREANAME
        ORDER BY
            LEVEL, ORDERNUM DESC
        ]]>
    </select>

    <select id="LIST_MCM_SENSOR" parameterType="map" resultType="map">
        SELECT
            D.AREACODE, D.AREANAME, C.STRCODE, B.SNSRID, B.SNSRNICK, A.STATE, A.CNT
        FROM
            (SELECT
                 A.SNSRID, 'DANGER' AS STATE, COUNT(*) AS CNT
             FROM
                 F_SENSOR_LOG A
             WHERE
                 A.REGDATE > CURDATE()
                 AND INSTR(CONCAT(OCALM, IGOALM, IGRALM), '2') > 0
             GROUP BY
                 A.SNSRID

             UNION

             SELECT
                 A.SNSRID, 'WARN' AS STATE, COUNT(*) AS CNT
             FROM
                 F_SENSOR_LOG A
             WHERE
                 A.REGDATE > CURDATE()
                 AND INSTR(CONCAT(OCALM, IGOALM, IGRALM), '1') > 0
             GROUP BY
                 A.SNSRID

             UNION

             SELECT
                 A.SNSRID, 'BROKEN' AS STATE, COUNT(*) AS CNT
             FROM
                 (SELECT SNSRID, DSEQ FROM F_SENSOR_LOG WHERE REGDATE > CURDATE()) A
                     JOIN (SELECT DSEQ FROM F_SENSOR_DATA WHERE SNSRIGO > 50) B
                         ON A.DSEQ = B.DSEQ
             GROUP BY
                 A.SNSRID
            ) A
                INNER JOIN (SELECT AREACODE, STRCODE, SNSRID, SNSRNICK FROM F_SENSOR_INFO WHERE CONCAT(DELYN, AREACODE) LIKE 'NAREA_%') B
                    ON A.SNSRID = B.SNSRID
                INNER JOIN (SELECT AREACODE, STRCODE FROM F_STORE WHERE CONCAT(GRPCODE, USEYN, DELYN) = '042YN') C
                    ON B.STRCODE = C.STRCODE
                INNER JOIN (SELECT GUCODE, AREACODE, AREANAME FROM F_LEVEL_AREA WHERE CONCAT(AREALEVEL, DELYN, GUCODE) LIKE '1N30%') D
                    ON C.AREACODE = D.AREACODE
        ORDER BY
            A.STATE, A.CNT DESC
    </select>

    <select id="LIST_MCM_AREA_SENSOR_CNT" parameterType="map" resultType="map">
        SELECT
            A.AREACODE
            , A.AREANAME
            , IFNULL(B.TOTAL, 0) AS TOTAL
            , IFNULL(C.DANGER, 0) AS DANGER
            , IFNULL(D.WARN, 0) AS WARN
            , IFNULL(E.DISCON, 0) AS DISCON
        FROM
            (SELECT
                 AREACODE, AREANAME
             FROM
                 F_LEVEL_AREA
             WHERE
                 CONCAT(AREALEVEL, DELYN, GUCODE) LIKE '1N30%'
                 AND AREACODE = #{areacode}
            ) A
                LEFT JOIN (SELECT
                               AREACODE, COUNT(DISTINCT SNSRID) AS TOTAL
                           FROM
                               F_SENSOR_INFO
                           WHERE
                               CONCAT(DELYN, AREACODE) LIKE 'NAREA_%'
                           GROUP BY
                               AREACODE) B
                    ON A.AREACODE = B.AREACODE
                LEFT JOIN (SELECT
                               AA.AREACODE, COUNT(DISTINCT BB.SNSRID) AS DANGER
                           FROM
                               (SELECT AREACODE, SNSRID FROM F_SENSOR_INFO WHERE CONCAT(DELYN, AREACODE) LIKE 'NAREA_%') AA
                                   LEFT JOIN (SELECT SNSRID FROM F_SENSOR_LOG WHERE REGDATE > CURDATE() AND INSTR(CONCAT(OCALM, IGOALM, IGRALM), '2') > 0) BB
                                       ON AA.SNSRID = BB.SNSRID
                           GROUP BY
                               AA.AREACODE) C
                    ON A.AREACODE = C.AREACODE
                LEFT JOIN (SELECT
                               AA.AREACODE, COUNT(DISTINCT BB.SNSRID) AS WARN
                           FROM
                               (SELECT AREACODE, SNSRID FROM F_SENSOR_INFO WHERE CONCAT(DELYN, AREACODE) LIKE 'NAREA_%') AA
                                   LEFT JOIN (SELECT SNSRID FROM F_SENSOR_LOG WHERE REGDATE > CURDATE() AND INSTR(CONCAT(OCALM, IGOALM, IGRALM), '1') > 0) BB
                                       ON AA.SNSRID = BB.SNSRID
                           GROUP BY
                               AA.AREACODE) D
                    ON A.AREACODE = D.AREACODE
                LEFT JOIN (SELECT
                               AREACODE, COUNT(DISTINCT SNSRID) AS DISCON
                           FROM
                               F_SENSOR_INFO
                           WHERE
                               CONCAT(DELYN, AREACODE) LIKE 'NAREA_%'
                               AND DATARCVTIME <![CDATA[ < ]]> NOW() - INTERVAL 1 HOUR
                           GROUP BY
                               AREACODE) E
                    ON A.AREACODE = E.AREACODE
    </select>

    <select id="LIST_MCM_AREA_STORE" parameterType="map" resultType="map">
        SELECT
            B.AREACODE
            , B.STRCODE
            , B.STRNAME
            , IFNULL(SUM(C.DANGER), 0) AS DANGER
            , IFNULL(SUM(D.WARN), 0) AS WARN
            , IFNULL(SUM(E.CON), 0) AS CON
            , COUNT(DISTINCT A.SNSRID) AS SNSRCOUNT
        FROM
            (SELECT AREACODE, STRCODE, SNSRID FROM F_SENSOR_INFO WHERE CONCAT(DELYN, AREACODE) LIKE 'NAREA_%' AND AREACODE = #{areacode}) A
                INNER JOIN (SELECT STRCODE FROM F_STORE WHERE CONCAT(GRPCODE, USEYN, DELYN) = '042YN') B
                    ON A.STRCODE = B.STRCODE
                INNER JOIN (SELECT
                                SNSRID, COUNT(*) AS DANGER
                            FROM
                                F_SENSOR_LOG
                            WHERE
                                REGDATE > CURDATE()
                                AND INSTR(CONCAT(OCALM, IGOALM, IGRALM), '2') > 0
                            GROUP BY
                                SNSRID) C
                    ON A.SNSRID = C.SNSRID
                INNER JOIN (SELECT
                                SNSRID, COUNT(*) AS WARN
                            FROM
                                F_SENSOR_LOG
                            WHERE
                                REGDATE > CURDATE()
                                AND INSTR(CONCAT(OCALM, IGOALM, IGRALM), '1') > 0
                            GROUP BY
                                SNSRID) D
                    ON A.SNSRID = D.SNSRID
                INNER JOIN (SELECT
                                SNSRID, COUNT(*) AS CON
                            FROM
                                F_SENSOR_DATA
                            WHERE
                                SNSRRCVTIME > NOW() - INTERVAL 1 HOUR
                            GROUP BY
                                SNSRID) E
                        ON A.SNSRID = E.SNSRID
        GROUP BY
            B.STRCODE, B.STRNAME
        ORDER BY
            4 DESC, 5 DESC, 6 DESC, B.STRNAME
    </select>

    <select id="LIST_MCM_AREA_SENSOR" parameterType="map" resultType="map">
        SELECT
            ROW_NUMBER() over (ORDER BY C.DANGER DESC, D.WARN DESC, G.CON DESC, A.SNSRID) AS ROWNUM
            , E.STRCODE
            , E.STRNAME
            , A.SNSRID
            , TRIM(LEADING '0' FROM A.SNSRID) AS SNSRIDTRIM
            , A.SNSRNICK
            , IFNULL(C.DANGER, 0) AS DANGER
            , IFNULL(D.WARN, 0) AS WARN
            , IFNULL(G.CON, 0) AS CON
            , IFNULL(F.CHK, 0) AS CHK
        FROM
            F_SENSOR_INFO A
                LEFT JOIN
                    (SELECT * FROM F_LEVEL_AREA WHERE AREALEVEL = 1 AND DELYN = 'N') B
                        ON A.AREACODE = B.AREACODE
                LEFT JOIN
                    F_STORE E
                        ON A.AREACODE = E.AREACODE
                        AND A.STRCODE = E.STRCODE
                LEFT JOIN
                    (SELECT
                         SNSRID, COUNT(*) AS DANGER
                     FROM
                         F_SENSOR_LOG
                     WHERE
                         REGDATE > CURDATE()
                         AND INSTR(CONCAT(OCALM, IGOALM, IGRALM), '2') > 0
                     GROUP BY
                         SNSRID
                    ) C
                        ON A.SNSRID = C.SNSRID
                LEFT JOIN
                    (SELECT
                         SNSRID, COUNT(*) AS WARN
                     FROM
                         F_SENSOR_LOG
                     WHERE
                         REGDATE > CURDATE()
                         AND INSTR(CONCAT(OCALM, IGOALM, IGRALM), '1') > 0
                     GROUP BY
                         SNSRID
                    ) D
                        ON A.SNSRID = D.SNSRID
                LEFT JOIN
                    (SELECT
                         SNSRID, COUNT(*) AS CHK
                     FROM
                         F_SENSOR_CHECK
                     WHERE
                         CHECKSTAT = 'ING'
                     GROUP BY
                         SNSRID
                    ) F
                        ON A.SNSRID = F.SNSRID
                LEFT JOIN
                    (SELECT
                         SNSRID, COUNT(*) AS CON
                     FROM
                         F_SENSOR_DATA
                     WHERE
                         SNSRRCVTIME > NOW() - INTERVAL 1 HOUR
                     GROUP BY
                         SNSRID
                    ) G
                        ON A.SNSRID = G.SNSRID
        WHERE
            A.DELYN != 'Y'
            AND B.GUCODE LIKE '30%'
            AND A.AREACODE = #{areacode}
            <if test="!@org.thymeleaf.util.StringUtils@isEmptyOrWhitespace(strcode)">
            AND A.STRCODE = #{strcode}
            </if>
        ORDER BY
            C.DANGER DESC, D.WARN DESC, G.CON DESC, A.SNSRID
    </select>

    <select id="LIST_MCM_STORE_SEARCH" parameterType="map" resultType="map">
        SELECT
            A.AREACODE, B.AREANAME, A.STRCODE, A.STRNAME
        FROM
            F_STORE A
                LEFT JOIN (SELECT * FROM F_LEVEL_AREA WHERE AREALEVEL = 1 AND DELYN = 'N') B
                    ON A.AREACODE = B.AREACODE
        WHERE
            A.STRNAME LIKE CONCAT('%', #{search}, '%')
            AND B.GUCODE LIKE '30%'
        ORDER BY
            A.STRNAME
    </select>

    <select id="LIST_MCM_CHECK_SENSOR" parameterType="map" resultType="map">
        SELECT
            D.AREACODE, D.AREANAME, B.STRCODE, B.SNSRID, B.SNSRNICK, A.STATE, A.CNT
        FROM
            (SELECT
                 A.SNSRID, 'CHECK' AS STATE, COUNT(*) AS CNT
             FROM
                 F_SENSOR_CHECK A
             WHERE
                 A.CHECKSTAT = 'ING'
             GROUP BY
                A.SNSRID
            ) A
                LEFT JOIN F_SENSOR_INFO B
                    ON A.SNSRID = B.SNSRID
                LEFT JOIN F_STORE C
                    ON B.STRCODE = C.STRCODE
                LEFT JOIN (SELECT * FROM F_LEVEL_AREA WHERE AREALEVEL = 1 AND DELYN = 'N') D
                    ON B.AREACODE = D.AREACODE
        WHERE
            D.GUCODE LIKE '30%'
        ORDER BY
            A.STATE, A.CNT DESC
    </select>

    <select id="LIST_MCM_AREA_DATA_CHART" parameterType="map" resultType="map">
        SELECT
            '1' AS TYPE
            , CONCAT(SUBSTR(DATE_FORMAT(A.SNSRRCVTIME, '%H:%i'), 1, 4), '0') AS RCVTIME
            , IFNULL(COUNT(*), 0) AS CNT
        FROM
            <choose>
                <when test="day == 1">F_SENSOR_DATA_2021 A</when>
                <otherwise>F_SENSOR_DATA A</otherwise>
            </choose>
                LEFT JOIN F_SENSOR_INFO B
                    ON A.SNSRID = B.SNSRID
                LEFT JOIN (SELECT * FROM F_LEVEL_AREA WHERE AREALEVEL = 1 AND DELYN = 'N') C
                    ON B.AREACODE = C.AREACODE
        WHERE
            A.SNSRRCVTIME <![CDATA[ < ]]> CURDATE() AND A.SNSRRCVTIME > CURDATE() - INTERVAL 1 DAY
            AND B.DELYN != 'Y'
            AND C.GUCODE LIKE '30%'
            AND B.AREACODE = #{areacode}
        GROUP BY
            2

        UNION

        SELECT
            '2' AS TYPE
            , CONCAT(SUBSTR(DATE_FORMAT(A.SNSRRCVTIME, '%H:%i'), 1, 4), '0') AS RCVTUNE
            , IFNULL(COUNT(*), 0) AS CNT
        FROM
            F_SENSOR_DATA A
                LEFT JOIN F_SENSOR_INFO B
                    ON A.SNSRID = B.SNSRID
                LEFT JOIN (SELECT * FROM F_LEVEL_AREA WHERE AREALEVEL = 1 AND DELYN = 'N') C
                    ON B.AREACODE = C.AREACODE
        WHERE
            A.SNSRRCVTIME > CURDATE()
            AND B.DELYN != 'Y'
            AND C.GUCODE LIKE '30%'
            AND B.AREACODE = #{areacode}
        GROUP BY
            2
        ORDER BY
            1, 2
    </select>

    <select id="LIST_MCM_AREA_LOG_CHART" parameterType="map" resultType="map">
        SELECT
            '1' AS TYPE
            , CONCAT(SUBSTR(DATE_FORMAT(A.REGDATE, '%H:%i'), 1, 4), '0') AS RCVTIME
            , IFNULL(COUNT(*), 0) AS CNT
        FROM
            <choose>
                <when test="day == 1">F_SENSOR_LOG_2021 A</when>
                <otherwise>F_SENSOR_LOG A</otherwise>
            </choose>
                LEFT JOIN F_SENSOR_INFO B
                    ON A.SNSRID = B.SNSRID
                LEFT JOIN (SELECT * FROM F_LEVEL_AREA WHERE AREALEVEL = 1 AND DELYN = 'N') C
                    ON B.AREACODE = C.AREACODE
       WHERE
           A.REGDATE <![CDATA[ < ]]> CURDATE() AND A.REGDATE > CURDATE() - INTERVAL 1 DAY
           AND INSTR(CONCAT(OCALM, IGOALM, IGRALM), '2') > 0
           AND B.DELYN != 'Y'
           AND C.GUCODE LIKE '30%'
           AND B.AREACODE = #{areacode}
       GROUP BY
           2

       UNION

       SELECT
           '2' AS TYPE
           , CONCAT(SUBSTR(DATE_FORMAT(A.REGDATE, '%H:%i'), 1, 4), '0') AS RCVTUNE
           , IFNULL(COUNT(*), 0) AS CNT
       FROM
           F_SENSOR_LOG A
               LEFT JOIN F_SENSOR_INFO B
                   ON A.SNSRID = B.SNSRID
               LEFT JOIN (SELECT * FROM F_LEVEL_AREA WHERE AREALEVEL = 1 AND DELYN = 'N') C
                   ON B.AREACODE = C.AREACODE
       WHERE
           A.REGDATE > CURDATE()
           AND INSTR(CONCAT(OCALM, IGOALM, IGRALM), '2') > 0
           AND B.DELYN != 'Y'
           AND C.GUCODE LIKE '30%'
           AND B.AREACODE = #{areacode}
       GROUP BY
           2
       ORDER BY
           1, 2
    </select>

    <select id="LIST_MCM_AREA_DATA_CHART_WEEK" parameterType="map" resultType="map">
        SELECT
            '1' AS DATETYPE
            , SDATE AS RCVTIME
            , DAYOFWEEK(SDATE) AS WEEK
            , IFNULL(SUM(SNSRKWHDAILY), 0) AS CNT
        FROM
            F_CRN_AREA_ELEC_DAILY_STAT
        WHERE
            SDATE <![CDATA[<]]> CURDATE() - INTERVAL (DAYOFWEEK(NOW()) - 1) DAY
            AND SDATE > CURDATE() - INTERVAL (7 + DAYOFWEEK(NOW())) DAY
            AND AREACODE = #{areacode}
            AND GUCODE LIKE '30%'
        GROUP BY
            SDATE, AREACODE

        UNION

        SELECT
            '2' AS TYPE
            , SDATE AS RCVTIME
            , DAYOFWEEK(SDATE) AS WEEK
            , IFNULL(SUM(SNSRKWHDAILY), 0) AS CNT
        FROM
            F_CRN_AREA_ELEC_DAILY_STAT
        WHERE
            SDATE > CURDATE() - INTERVAL DAYOFWEEK(NOW()) DAY
            AND GUCODE LIKE '30%'
            AND AREACODE = #{areacode}
        GROUP BY
            SDATE, AREACODE

       UNION

       SELECT
           '2' AS TYPE
           , DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i:%s') AS RCVTIME
           , DAYOFWEEK(NOW()) AS WEEK
           , IFNULL(SUM(USEKWH), 0) AS CNT
       FROM
           (SELECT
                A.SNSRID
                , MAX(A.SNSRKWH) - MIN(A.SNSRKWH) AS USEKWH
            FROM
                F_SENSOR_DATA A
                    LEFT JOIN F_SENSOR_INFO B
                        ON A.SNSRID = B.SNSRID
                    LEFT JOIN (SELECT * FROM F_LEVEL_AREA WHERE AREALEVEL = 1 AND DELYN = 'N') C
                        ON B.AREACODE = C.AREACODE
            WHERE
                B.DELYN != 'Y'
                AND A.SNSRRCVTIME > CURDATE()
                AND C.GUCODE LIKE '30%'
                AND B.AREACODE = #{areacode}
            GROUP BY
                A.SNSRID) Z
       ORDER BY
           1, 2
    </select>

    <select id="LIST_MCM_AREA_LOG_CHART_WEEK" parameterType="map" resultType="map">
        SELECT
            '1' AS TYPE
            , DATE(A.REGDATE) AS RCVTIME
            , DAYOFWEEK(A.REGDATE) AS WEEK
            , IFNULL(COUNT(*), 0) AS CNT
        FROM
            F_SENSOR_LOG_2021 A
                LEFT JOIN F_SENSOR_INFO B
                    ON A.SNSRID = B.SNSRID
                LEFT JOIN (SELECT * FROM F_LEVEL_AREA WHERE AREALEVEL = 1 AND DELYN = 'N') C
                    ON B.AREACODE = C.AREACODE
        WHERE
            A.REGDATE <![CDATA[<]]> CURDATE() - INTERVAL (DAYOFWEEK(NOW()) - 1) DAY
            AND A.REGDATE > CURDATE() - INTERVAL (7 + (DAYOFWEEK(NOW()) - 1)) DAY
            AND INSTR(CONCAT(OCALM, IGOALM, IGRALM), '2') > 0
            AND B.DELYN != 'Y'
            AND C.GUCODE LIKE '30%'
            AND B.AREACODE = #{areacode}
        GROUP BY
            2

        UNION

        SELECT
            '1' AS TYPE
            , DATE(A.REGDATE) AS RCVTIME
            , DAYOFWEEK(A.REGDATE) AS WEEK
            , IFNULL(COUNT(*), 0) AS CNT
        FROM
            F_SENSOR_LOG A
                LEFT JOIN F_SENSOR_INFO B
                    ON A.SNSRID = B.SNSRID
                LEFT JOIN (SELECT * FROM F_LEVEL_AREA WHERE AREALEVEL = 1 AND DELYN = 'N') C
                    ON B.AREACODE = C.AREACODE
        WHERE
            A.REGDATE <![CDATA[<]]> CURDATE() - INTERVAL (DAYOFWEEK(NOW()) - 1) DAY
            AND A.REGDATE > CURDATE() - INTERVAL (7 + (DAYOFWEEK(NOW()) - 1)) DAY
            AND INSTR(CONCAT(OCALM, IGOALM, IGRALM), '2') > 0
            AND B.DELYN != 'Y'
            AND C.GUCODE LIKE '30%'
            AND B.AREACODE = #{areacode}
        GROUP BY
            2

        UNION

        SELECT
            '2' AS TYPE
            , DATE(A.REGDATE) AS RCVTUNE
            , DAYOFWEEK(A.REGDATE) AS WEEK
            , IFNULL(COUNT(*), 0) AS CNT
        FROM
            F_SENSOR_LOG A
                LEFT JOIN F_SENSOR_INFO B
                    ON A.SNSRID = B.SNSRID
                LEFT JOIN (SELECT * FROM F_LEVEL_AREA WHERE AREALEVEL = 1 AND DELYN = 'N') C
                    ON B.AREACODE = C.AREACODE
        WHERE
            A.REGDATE > CURDATE() - INTERVAL (DAYOFWEEK(NOW()) - 1) DAY
            AND INSTR(CONCAT(OCALM, IGOALM, IGRALM), '2') > 0
            AND B.DELYN != 'Y'
            AND C.GUCODE LIKE '30%'
            AND B.AREACODE = #{areacode}
        GROUP BY
            2
        ORDER BY
            1, 2
    </select>

    <select id="LIST_MCM_AREA_MAP_SENSOR" parameterType="map" resultType="map">
        SELECT
            B.STRCODE
            , B.STRNAME
            , A.SNSRID
            , A.SNSRNICK
            , B.STRPOSLAT
            , B.STRPOSLON
            , (CASE
                   WHEN C.CNT > 0 THEN 'danger'
                   WHEN D.CNT > 0 THEN 'warning'
                   WHEN E.CNT > 0 THEN 'normal'
                   ELSE 'discon'
              END) AS STATE
        FROM
            F_SENSOR_INFO A
                LEFT JOIN
                    F_STORE B
                        ON A.AREACODE = B.AREACODE
                        AND A.STRCODE = B.STRCODE
                LEFT JOIN
                    (SELECT * FROM F_LEVEL_AREA WHERE AREALEVEL = 1 AND DELYN = 'N') F
                        ON A.AREACODE = F.AREACODE
                LEFT JOIN
                    (SELECT
                         SNSRID, IFNULL(COUNT(*), 0) AS CNT
                     FROM
                         F_SENSOR_LOG
                     WHERE
                         REGDATE > CURDATE()
                         AND INSTR(CONCAT(OCALM, IGOALM, IGRALM), '2') > 0
                     GROUP BY
                         SNSRID
                    ) C
                        ON A.SNSRID = C.SNSRID
                LEFT JOIN
                    (SELECT
                         SNSRID, IFNULL(COUNT(*), 0) AS CNT
                     FROM
                         F_SENSOR_LOG
                     WHERE
                         REGDATE > CURDATE()
                         AND INSTR(CONCAT(OCALM, IGOALM, IGRALM), '1') > 0
                     GROUP BY
                         SNSRID
                    ) D
                        ON A.SNSRID = D.SNSRID
                LEFT JOIN
                    (SELECT
                         SNSRID, IFNULL(COUNT(*), 0) AS CNT
                     FROM
                         F_SENSOR_DATA
                     WHERE
                         SNSRRCVTIME > NOW() - INTERVAL 1 HOUR
                     GROUP BY
                         SNSRID
                    ) E
                        ON A.SNSRID = E.SNSRID
        WHERE
            A.DELYN != 'Y'
            AND B.DELYN != 'Y'
            AND F.GUCODE LIKE '30%'
            AND A.AREACODE = #{areacode}
        ORDER BY
            C.CNT DESC, D.CNT DESC, E.CNT DESC, B.STRNAME
    </select>

</mapper>
