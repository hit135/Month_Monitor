<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.fscom.firsens.mng.challenge.repository.MCMainRepo">

    <select id="LIST_MCM_SENSOR_CNT" parameterType="map" resultType="map">
        <![CDATA[
        (SELECT
             'TODAY' TERM
             , B.TYPE
             , B.ORDERNUM
             , (CASE
                    WHEN B.TYPE = 'TOTAL' THEN A.TOTAL
                    WHEN B.TYPE = 'DISCON' THEN A.DISCON
                END) AS CNT
         FROM
             (SELECT
                  COUNT(DISTINCT I.SNSRID) AS TOTAL
                  , COUNT(DISTINCT CASE WHEN I.DATARCVTIME < NOW() - INTERVAL 1 HOUR THEN I.SNSRID END) AS DISCON
              FROM
                  F_SENSOR_INFO I
                      LEFT JOIN F_STORE S
                          ON I.STRCODE = S.STRCODE
              WHERE
                  I.DELYN = 'N'
                  AND CONCAT(S.GRPCODE, S.USEYN, S.DELYN) = '042YN'
             ) A
                 CROSS JOIN (SELECT 'TOTAL' AS TYPE, 1 AS ORDERNUM
                             UNION ALL SELECT 'DISCON', 2) B
         GROUP BY
             B.TYPE)

        UNION

        (SELECT
             B.TERM
             , B.TYPE
             , B.ORDERNUM
             , (CASE
                    WHEN CONCAT(B.TERM, B.TYPE) = 'TODAYWARN' THEN A.TODAYWARN
                    WHEN CONCAT(B.TERM, B.TYPE) = 'COUNTWARN' THEN A.COUNTWARN
                    WHEN CONCAT(B.TERM, B.TYPE) = 'TODAYDANGER' THEN A.TODAYDANGER
                    WHEN CONCAT(B.TERM, B.TYPE) = 'COUNTDANGER' THEN A.COUNTDANGER
                END) AS CNT
         FROM
             (SELECT
                  COUNT(DISTINCT CASE WHEN INSTR(L.ALM, '1') > 0 THEN L.SNSRID END) AS TODAYWARN
                  , COUNT(DISTINCT CASE WHEN INSTR(L.ALM, '1') > 0 THEN L.LSEQ END) AS COUNTWARN
                  , COUNT(DISTINCT CASE WHEN INSTR(L.ALM, '2') > 0 THEN L.SNSRID END) AS TODAYDANGER
                  , COUNT(DISTINCT CASE WHEN INSTR(L.ALM, '2') > 0 THEN L.LSEQ END) AS COUNTDANGER
              FROM
                  (SELECT
                       SNSRID, LSEQ, CONCAT(OCALM, IGOALM, IGRALM) AS ALM
                   FROM
                       F_SENSOR_LOG
                   WHERE
                       REGDATE > CURDATE()
                       AND OCALM + IGOALM + IGRALM > 0
                  ) L
                      LEFT JOIN F_SENSOR_INFO I
                          ON L.SNSRID = I.SNSRID
                      LEFT JOIN F_STORE S
                          ON I.STRCODE = S.STRCODE
              WHERE
                  I.DELYN = 'N'
                  AND CONCAT(S.GRPCODE, S.USEYN, S.DELYN) = '042YN'
             ) A
                 CROSS JOIN (SELECT 'TODAY' AS TERM, 'WARN' AS TYPE, 3 AS ORDERNUM
                             UNION ALL SELECT 'COUNT', 'WARN', 4
                             UNION ALL SELECT 'TODAY', 'DANGER', 5
                             UNION ALL SELECT 'COUNT', 'DANGER', 6) B
         GROUP BY
             B.TERM, B.TYPE)
        ORDER BY
            ORDERNUM
        ]]>
    </select>

    <sql id="LIST_MCM_AREA_CMM">
        <![CDATA[
        (SELECT
             A.GUCODE
             , A.GUNAME
             , B.AREACODE
             , B.AREANAME
             , COUNT(DISTINCT D.SNSRID) AS SENSOR
             , COUNT(DISTINCT D.STRCODE) AS STORE
             , COUNT(DISTINCT CASE WHEN D.DATARCVTIME < NOW() - INTERVAL 1 HOUR THEN D.SNSRID END) AS DISCON
             , COUNT(DISTINCT CASE WHEN INSTR(E.DANGERALM, '2') > 0 THEN D.SNSRID END) AS DANGER
             , COUNT(DISTINCT CASE WHEN INSTR(E.WARNALM, '1') > 0 THEN D.SNSRID END) AS WARN
         FROM
             F_GUCODE A
                 LEFT JOIN F_LEVEL_AREA B
                     ON A.GUCODE = B.GUCODE
                 LEFT JOIN F_STORE C
                     ON B.AREACODE = C.AREACODE
                 LEFT JOIN F_SENSOR_INFO D
                     ON C.STRCODE = D.STRCODE
                 LEFT JOIN (SELECT
                                SNSRID
                                , CONCAT(MAX(OCALM), MAX(IGOALM), MAX(IGRALM)) AS DANGERALM
                                , CONCAT(MAX(REPLACE(OCALM, 2, 0)), MAX(REPLACE(IGOALM, 2, 0)), MAX(REPLACE(IGRALM, 2, 0))) AS WARNALM
                            FROM
                                F_SENSOR_LOG
                            WHERE
                                REGDATE > CURDATE()
                                AND OCALM + IGOALM + IGRALM > 0
                            GROUP BY
                                SNSRID) E
                     ON D.SNSRID = E.SNSRID
         WHERE
             CONCAT(A.USEYN, A.GUCODE) LIKE 'Y30%'
             AND CONCAT(B.AREALEVEL, B.DELYN, B.GUCODE) LIKE '1N30%'
             AND CONCAT(C.GRPCODE, C.USEYN, C.DELYN) = '042YN'
             AND D.DELYN = 'N'
         GROUP BY
             ${alias}) S
        ]]>
    </sql>

    <select id="LIST_MCM_AREA" parameterType="map" resultType="map">
        (SELECT
             1 AS LEVEL
             , S.GUCODE AS CODE
             , S.GUNAME AS NAME
             , S.SENSOR
             , S.STORE
             , S.DANGER
             , S.WARN
             , S.DISCON
             , NULL AS UPCODE
             , S.DANGER * 10000 + S.WARN AS ORDERNUM
         FROM
             <include refid="LIST_MCM_AREA_CMM">
                 <property name="alias" value="A.GUCODE" />
             </include>)

        UNION

        (SELECT
             2 AS LEVEL
             , S.AREACODE AS CODE
             , S.AREANAME AS NAME
             , S.SENSOR
             , S.STORE
             , S.DANGER
             , S.WARN
             , S.DISCON
             , S.GUCODE AS UPCODE
             , 0 - (S.DANGER * 10000 + S.WARN) AS ORDERNUM
         FROM
             <include refid="LIST_MCM_AREA_CMM">
                 <property name="alias" value="B.AREACODE" />
             </include>)
        ORDER BY
            LEVEL, ORDERNUM DESC
    </select>

    <select id="LIST_MCM_CHECK_SENSOR" parameterType="map" resultType="map">
        SELECT
            D.AREACODE, D.AREANAME, B.STRCODE, B.SNSRID, B.SNSRNICK, A.STATE, A.CNT
        FROM
            (SELECT
                 A.SNSRID, 'CHECK' AS STATE, COUNT(*) AS CNT
             FROM
                 F_SENSOR_CHECK A
             WHERE
                 A.CHECKSTAT = 'ING'
             GROUP BY
                 A.SNSRID
            ) A
                LEFT JOIN F_SENSOR_INFO B
                    ON A.SNSRID = B.SNSRID
                LEFT JOIN F_STORE C
                    ON B.STRCODE = C.STRCODE
                LEFT JOIN F_LEVEL_AREA D
                    ON C.AREACODE = D.AREACODE
        WHERE
            B.DELYN = 'N'
            AND CONCAT(C.GRPCODE, C.USEYN, C.DELYN) = '042YN'
            AND CONCAT(D.AREALEVEL, D.DELYN, D.GUCODE) LIKE '1N30%'
        ORDER BY
            A.STATE, A.CNT DESC
    </select>

    <select id="LIST_MCM_SENSOR" parameterType="map" resultType="map">
        SELECT
            S.AREACODE, S.AREANAME, S.STRCODE, S.SNSRID, S.SNSRNICK, S.STATE, S.CNT
        FROM
            (SELECT
                 D.AREACODE
                 , D.AREANAME
                 , C.STRCODE
                 , B.SNSRID
                 , B.SNSRNICK
                 , E.STATE
                 , (CASE
                        WHEN E.STATE = 'DANGER'
                            THEN COUNT(CASE WHEN INSTR(A.ALM, '2') > 0 THEN A.LSEQ END)
                        WHEN E.STATE = 'WARN'
                            THEN COUNT(CASE WHEN INSTR(A.ALM, '1') > 0 THEN A.LSEQ END)
                        WHEN E.STATE = 'BROKEN'
                            THEN COUNT(CASE WHEN EXISTS (SELECT DSEQ FROM F_SENSOR_DATA WHERE DSEQ = A.DSEQ AND SNSRIGO > 50) THEN A.DSEQ END)
                    END) AS CNT
             FROM
                 (SELECT
                      DSEQ, LSEQ, SNSRID, CONCAT(OCALM, IGOALM, IGRALM) AS ALM
                  FROM
                      F_SENSOR_LOG
                  WHERE
                      REGDATE > CURDATE()
                 ) A
                     LEFT JOIN F_SENSOR_INFO B
                         ON A.SNSRID = B.SNSRID
                     LEFT JOIN F_STORE C
                         ON B.STRCODE = C.STRCODE
                     LEFT JOIN F_LEVEL_AREA D
                         ON C.AREACODE = D.AREACODE
                     CROSS JOIN (SELECT 'DANGER' AS STATE
                                 UNION ALL SELECT 'WARN'
                                 UNION ALL SELECT 'BROKEN') E
             WHERE
                 B.DELYN = 'N'
                 AND CONCAT(C.GRPCODE, C.USEYN, C.DELYN) = '042YN'
                 AND CONCAT(D.AREALEVEL, D.DELYN, D.GUCODE) LIKE '1N30%'
             GROUP BY
                 D.AREACODE, C.STRCODE, B.SNSRID, E.STATE) S
        WHERE
            S.CNT > 0
        ORDER BY
            S.STATE, S.CNT DESC
    </select>

    <select id="LIST_MCM_AREA_SENSOR_CNT" parameterType="map" resultType="map">
        <![CDATA[
        SELECT
            A.AREACODE, A.AREANAME, B.TOTAL, B.DISCON, B.DANGER, B.WARN
        FROM
            F_LEVEL_AREA A
                LEFT JOIN (SELECT
                               C2.AREACODE
                               , COUNT(DISTINCT C1.SNSRID) AS TOTAL
                               , COUNT(DISTINCT CASE WHEN C1.DATARCVTIME < NOW() - INTERVAL 1 HOUR THEN C1.SNSRID END) AS DISCON
                               , COUNT(CASE WHEN INSTR(C3.ALM, '2') > 0 THEN C3.LSEQ END) AS DANGER
                               , COUNT(CASE WHEN INSTR(C3.ALM, '1') > 0 THEN C3.LSEQ END) AS WARN
                           FROM
                               F_SENSOR_INFO C1
                                   LEFT JOIN F_STORE C2
                                       ON C1.STRCODE = C2.STRCODE
                                   LEFT JOIN (SELECT
                                                  SNSRID, LSEQ, CONCAT(OCALM, IGOALM, IGRALM) AS ALM
                                              FROM
                                                  F_SENSOR_LOG
                                              WHERE
                                                  REGDATE > CURDATE()
                                                  AND OCALM + IGOALM + IGRALM > 0) C3
                                       ON C1.SNSRID = C3.SNSRID
                           WHERE
                               C1.DELYN = 'N'
                               AND CONCAT(C2.GRPCODE, C2.USEYN, C2.DELYN) = '042YN'
                               AND C2.AREACODE = #{areacode}) B
                    ON A.AREACODE = B.AREACODE
        WHERE
            A.AREACODE = #{areacode}
        ]]>
    </select>

    <select id="LIST_MCM_AREA_STORE" parameterType="map" resultType="map">
        <![CDATA[
        SELECT
            A.AREACODE, A.STRCODE, A.STRNAME, B.DANGER, B.WARN, B.CON, B.SNSRCOUNT
        FROM
            F_STORE A
                LEFT JOIN (SELECT
                               I.STRCODE
                               , COUNT(DISTINCT I.SNSRID) AS SNSRCOUNT
                               , COUNT(DISTINCT CASE WHEN I.DATARCVTIME < NOW() - INTERVAL 1 HOUR THEN I.SNSRID END) AS CON
                               , COUNT(CASE WHEN INSTR(L.ALM, '2') > 0 THEN L.LSEQ END) AS DANGER
                               , COUNT(CASE WHEN INSTR(L.ALM, '1') > 0 THEN L.LSEQ END) AS WARN
                           FROM
                               F_SENSOR_INFO I
                                   LEFT JOIN (SELECT
                                                  SNSRID, LSEQ, CONCAT(OCALM, IGOALM, IGRALM) AS ALM
                                              FROM
                                                  F_SENSOR_LOG
                                              WHERE
                                                  REGDATE > CURDATE()
                                                  AND OCALM + IGOALM + IGRALM > 0) L
                                       ON I.SNSRID = L.SNSRID
                           WHERE
                               I.DELYN = 'N'
                           GROUP BY
                               I.STRCODE) B
                    ON A.STRCODE = B.STRCODE
        WHERE
            AREACODE = #{areacode}
        ORDER BY
            B.DANGER DESC, B.WARN DESC, B.CON DESC, A.STRNAME
        ]]>
    </select>

    <select id="LIST_MCM_AREA_SENSOR" parameterType="map" resultType="map">
        SELECT
            ROW_NUMBER() OVER () AS ROWNUM
            , B.STRCODE
            , B.STRNAME
            , A.SNSRID
            , TRIM(LEADING '0' FROM A.SNSRID) AS SNSRIDTRIM
            , A.SNSRNICK
            , COUNT(CASE WHEN INSTR(D.ALM, '2') > 0 THEN D.LSEQ END) AS DANGER
            , COUNT(CASE WHEN INSTR(D.ALM, '1') > 0 THEN D.LSEQ END) AS WARN
            , COUNT(DISTINCT CASE WHEN A.DATARCVTIME <![CDATA[<]]> NOW() - INTERVAL 1 HOUR THEN A.SNSRID END) AS CON
            , E.CHK
        FROM
            F_SENSOR_INFO A
                LEFT JOIN F_STORE B
                    ON A.STRCODE = B.STRCODE
                LEFT JOIN F_LEVEL_AREA C
                    ON B.AREACODE = C.AREACODE
                LEFT JOIN (SELECT
                                SNSRID, LSEQ, CONCAT(OCALM, IGOALM, IGRALM) AS ALM
                            FROM
                                F_SENSOR_LOG
                            WHERE
                                REGDATE > CURDATE()
                                AND OCALM + IGOALM + IGRALM > 0) D
                    ON A.SNSRID = D.SNSRID
                LEFT JOIN (SELECT SNSRID, COUNT(*) AS CHK FROM F_SENSOR_CHECK WHERE CHECKSTAT = 'ING' GROUP BY SNSRID) E
                    ON A.SNSRID = E.SNSRID
        WHERE
            A.DELYN = 'N'
            AND CONCAT(B.GRPCODE, B.USEYN, B.DELYN) = '042YN'
            AND CONCAT(C.AREALEVEL, C.DELYN, C.GUCODE) LIKE '1N30%'
            AND C.AREACODE = #{areacode}
            <if test="!@org.thymeleaf.util.StringUtils@isEmptyOrWhitespace(strcode)">AND A.STRCODE = #{strcode}</if>
        ORDER BY
            DANGER DESC, WARN DESC, CON DESC, SNSRID
    </select>

    <select id="LIST_MCM_AREA_DATA_CHART" parameterType="map" resultType="map">
        SELECT
            '1' AS TYPE
            , CONCAT(SUBSTR(DATE_FORMAT(A.SNSRRCVTIME, '%H:%i'), 1, 4), '0') AS RCVTIME
            , COUNT(*) AS CNT
        FROM
            (SELECT
                 SNSRID, SNSRRCVTIME
             FROM <choose>
                      <when test="day == 1">F_SENSOR_DATA_2021</when>
                      <otherwise>F_SENSOR_DATA</otherwise>
                  </choose>
             WHERE
                 SNSRRCVTIME <![CDATA[<]]> CURDATE()
                 AND SNSRRCVTIME > CURDATE() - INTERVAL 1 DAY
            ) A
                LEFT JOIN F_SENSOR_INFO B
                    ON A.SNSRID = B.SNSRID
                LEFT JOIN F_LEVEL_AREA C
                    ON B.AREACODE = C.AREACODE
        WHERE
            B.DELYN = 'N'
            AND CONCAT(C.AREALEVEL, C.DELYN, C.GUCODE) LIKE '1N30%'
            AND C.AREACODE = #{areacode}
        GROUP BY
            2

        UNION

        SELECT
            '2' AS TYPE
            , CONCAT(SUBSTR(DATE_FORMAT(A.SNSRRCVTIME, '%H:%i'), 1, 4), '0') AS RCVTUNE
            , COUNT(*) AS CNT
        FROM
            (SELECT SNSRID, SNSRRCVTIME FROM F_SENSOR_DATA WHERE SNSRRCVTIME > CURDATE()) A
                LEFT JOIN F_SENSOR_INFO B
                    ON A.SNSRID = B.SNSRID
                LEFT JOIN F_LEVEL_AREA C
                    ON B.AREACODE = C.AREACODE
        WHERE
            B.DELYN = 'N'
            AND CONCAT(C.AREALEVEL, C.DELYN, C.GUCODE) LIKE '1N30%'
            AND C.AREACODE = #{areacode}
        GROUP BY
            2
        ORDER BY
            TYPE, RCVTIME
    </select>

    <select id="LIST_MCM_AREA_LOG_CHART" parameterType="map" resultType="map">
        SELECT
            '1' AS TYPE
            , CONCAT(SUBSTR(DATE_FORMAT(A.REGDATE, '%H:%i'), 1, 4), '0') AS RCVTIME
            , COUNT(*) AS CNT
        FROM
            (SELECT
                 SNSRID, REGDATE
             FROM <choose>
                      <when test="day == 1">F_SENSOR_LOG_2021 A</when>
                      <otherwise>F_SENSOR_LOG A</otherwise>
                  </choose>
             WHERE
                 REGDATE <![CDATA[<]]> CURDATE()
                 AND REGDATE > CURDATE() - INTERVAL 1 DAY
                 AND INSTR(CONCAT(OCALM, IGOALM, IGRALM), '2') > 0
            ) A
                LEFT JOIN F_SENSOR_INFO B
                    ON A.SNSRID = B.SNSRID
                LEFT JOIN F_LEVEL_AREA C
                    ON B.AREACODE = C.AREACODE
       WHERE
           B.DELYN = 'N'
           AND CONCAT(C.AREALEVEL, C.DELYN, C.GUCODE) LIKE '1N30%'
           AND C.AREACODE = #{areacode}
       GROUP BY
           2

       UNION

       SELECT
           '2' AS TYPE
           , CONCAT(SUBSTR(DATE_FORMAT(A.REGDATE, '%H:%i'), 1, 4), '0') AS RCVTUNE
           , COUNT(*) AS CNT
       FROM
           (SELECT
                SNSRID, REGDATE
            FROM
                F_SENSOR_LOG
            WHERE
                REGDATE > CURDATE()
                AND INSTR(CONCAT(OCALM, IGOALM, IGRALM), '2') > 0
           ) A
               LEFT JOIN F_SENSOR_INFO B
                   ON A.SNSRID = B.SNSRID
               LEFT JOIN F_LEVEL_AREA C
                   ON B.AREACODE = C.AREACODE
       WHERE
           B.DELYN = 'N'
           AND CONCAT(C.AREALEVEL, C.DELYN, C.GUCODE) LIKE '1N30%'
           AND C.AREACODE = #{areacode}
       GROUP BY
           2
       ORDER BY
           TYPE, RCVTIME
    </select>

    <select id="LIST_MCM_AREA_DATA_CHART_WEEK" parameterType="map" resultType="map">
        <![CDATA[
        SELECT
            '1' AS TYPE,
             SDATE AS RCVTIME,
             DAYOFWEEK(SDATE) AS WEEK,
             IFNULL(SUM(SNSRKWHDAILY), 0) AS CNT
        FROM
            F_CRN_AREA_ELEC_DAILY_STAT
        WHERE
            SDATE < CURDATE() - INTERVAL (DAYOFWEEK(CURDATE()) - 1) DAY
            AND SDATE > CURDATE() - INTERVAL (7 + DAYOFWEEK(CURDATE())) DAY
            AND GUCODE LIKE '30%'
            AND AREACODE = #{areacode}
        GROUP BY
            SDATE, AREACODE

        UNION

        SELECT
            '2' AS TYPE,
            SDATE AS RCVTIME,
            DAYOFWEEK(SDATE) AS WEEK,
            IFNULL(SUM(SNSRKWHDAILY), 0) AS CNT
        FROM
            F_CRN_AREA_ELEC_DAILY_STAT
        WHERE
            SDATE > CURDATE() - INTERVAL DAYOFWEEK(CURDATE()) DAY
            AND GUCODE LIKE '30%'
            AND AREACODE = #{areacode}
        GROUP BY
            SDATE, AREACODE

       UNION

       SELECT
           '2' AS TYPE
           , DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i:%s') AS RCVTIME
           , DAYOFWEEK(NOW()) AS WEEK
           , IFNULL(SUM(USEKWH), 0) AS CNT
       FROM
           (SELECT
                A.SNSRID
                , MAX(A.SNSRKWH) - MIN(A.SNSRKWH) AS USEKWH
            FROM
                (SELECT SNSRID, SNSRKWH FROM F_SENSOR_DATA WHERE SNSRRCVTIME > CURDATE()) A
                    LEFT JOIN F_SENSOR_INFO B
                        ON A.SNSRID = B.SNSRID
                    LEFT JOIN F_LEVEL_AREA C
                        ON B.AREACODE = C.AREACODE
            WHERE
                B.DELYN = 'N'
                AND CONCAT(C.AREALEVEL, C.DELYN, C.GUCODE) LIKE '1N30%'
                AND C.AREACODE = #{areacode}
            GROUP BY
                A.SNSRID) Z
       ORDER BY
           TYPE, RCVTIME
       ]]>
    </select>

    <select id="LIST_MCM_AREA_LOG_CHART_WEEK" parameterType="map" resultType="map">
        <![CDATA[
        SELECT
            '1' AS TYPE
            , DATE_FORMAT(A.REGDATE, '%Y-%m-%d') AS RCVTIME
            , DAYOFWEEK(A.REGDATE) AS WEEK
            , COUNT(*) AS CNT
        FROM
            (SELECT
                 S.SNSRID, S.REGDATE
             FROM
                 (SELECT SNSRID, REGDATE, CONCAT(OCALM, IGOALM, IGRALM) AS ALM FROM F_SENSOR_LOG_2021
                  UNION ALL SELECT SNSRID, REGDATE, CONCAT(OCALM, IGOALM, IGRALM) AS ALM FROM F_SENSOR_LOG) S
             WHERE
                 S.REGDATE < CURDATE() - INTERVAL (DAYOFWEEK(CURDATE()) - 1) DAY
                 AND S.REGDATE > CURDATE() - INTERVAL (7 + (DAYOFWEEK(CURDATE()) - 1)) DAY
                 AND INSTR(S.ALM, '2') > 0
            ) A
                LEFT JOIN F_SENSOR_INFO B
                    ON A.SNSRID = B.SNSRID
                LEFT JOIN F_LEVEL_AREA C
                    ON B.AREACODE = C.AREACODE
        WHERE
            B.DELYN = 'N'
            AND CONCAT(C.AREALEVEL, C.DELYN, C.GUCODE) LIKE '1N30%'
            AND C.AREACODE = #{areacode}
        GROUP BY
            DATE(A.REGDATE)

        UNION

        SELECT
            '2' AS TYPE
            , DATE_FORMAT(A.REGDATE, '%Y-%m-%d') AS RCVTUNE
            , DAYOFWEEK(A.REGDATE) AS WEEK
            , COUNT(*) AS CNT
        FROM
            (SELECT
                 SNSRID, REGDATE
             FROM
                 F_SENSOR_LOG
             WHERE
                 REGDATE > CURDATE() - INTERVAL (DAYOFWEEK(CURDATE()) - 1) DAY
                 AND INSTR(CONCAT(OCALM, IGOALM, IGRALM), '2') > 0
            ) A
                LEFT JOIN F_SENSOR_INFO B
                    ON A.SNSRID = B.SNSRID
                LEFT JOIN F_LEVEL_AREA C
                    ON B.AREACODE = C.AREACODE
        WHERE
            B.DELYN = 'N'
            AND CONCAT(C.AREALEVEL, C.DELYN, C.GUCODE) LIKE '1N30%'
            AND C.AREACODE = #{areacode}
        GROUP BY
            DATE(A.REGDATE)
        ORDER BY
            TYPE, RCVTIME
        ]]>
    </select>

    <select id="LIST_MCM_AREA_MAP_SENSOR" parameterType="map" resultType="map">
        SELECT
            B.STRCODE
            , B.STRNAME
            , A.SNSRID
            , A.SNSRNICK
            , B.STRPOSLAT
            , B.STRPOSLON
            , (CASE
                   WHEN C.DANGERCNT > 0 THEN 'danger'
                   WHEN C.WARNCNT > 0 THEN 'warning'
                   WHEN C.DATACNT > 0 THEN 'normal'
                   ELSE 'discon'
               END) AS STATE
        FROM
            F_SENSOR_INFO A
                LEFT JOIN F_STORE B
                    ON A.STRCODE = B.STRCODE
                LEFT JOIN (SELECT
                                C1.SNSRID
                                , COUNT(CASE WHEN C1.SNSRRCVTIME > NOW() - INTERVAL 1 HOUR THEN C1.DSEQ END) AS DATACNT
                                , COUNT(CASE WHEN INSTR(C2.ALM, '2') > 0 THEN C2.LSEQ END) AS DANGERCNT
                                , COUNT(CASE WHEN INSTR(C2.ALM, '1') > 0 THEN C2.LSEQ END) AS WARNCNT
                            FROM
                                (SELECT SNSRID, DSEQ, SNSRRCVTIME FROM F_SENSOR_DATA WHERE SNSRRCVTIME > CURDATE()) C1
                                    LEFT JOIN (SELECT
                                                   DSEQ, LSEQ, CONCAT(OCALM, IGOALM, IGRALM) AS ALM
                                               FROM
                                                   F_SENSOR_LOG
                                               WHERE
                                                   REGDATE > CURDATE()
                                                   AND OCALM + IGOALM + IGRALM > 0) C2
                                        ON C1.DSEQ = C2.DSEQ
                            GROUP BY
                                C1.SNSRID) C
                    ON A.SNSRID = C.SNSRID
        WHERE
            A.DELYN = 'N'
            AND CONCAT(B.GRPCODE, B.USEYN, B.DELYN) = '042YN'
        ORDER BY
            C.DANGERCNT DESC, C.WARNCNT DESC, C.DATACNT DESC, B.STRNAME
    </select>

    <select id="LIST_MCM_STORE_SEARCH" parameterType="map" resultType="map">
        SELECT
            A.AREACODE, B.AREANAME, A.STRCODE, A.STRNAME
        FROM
            F_STORE A
                LEFT JOIN F_LEVEL_AREA B
                    ON A.AREACODE = B.AREACODE
        WHERE
            CONCAT(A.GRPCODE, A.USEYN, A.DELYN) = '042YN'
            AND CONCAT(B.AREALEVEL, B.DELYN, B.GUCODE) LIKE '1N30%'
            AND A.STRNAME LIKE CONCAT('%', #{search}, '%')
        ORDER BY
            A.STRNAME
    </select>

</mapper>
