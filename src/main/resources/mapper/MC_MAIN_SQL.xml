<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.fscom.firsens.mng.challenge.repository.MCMainRepo">

    <!-- 종합 현황 (전체, 경고, 주의, 끊김) -->
    <select id="LIST_MCM_SENSOR_CNT" parameterType="map" resultType="map">
        <![CDATA[
        SELECT
            'TODAY' TERM
            , B.TYPE
            , B.ORDERNUM
            , (CASE
                   WHEN B.TYPE = 'TOTAL' THEN A.TOTAL
                   WHEN B.TYPE = 'DISCON' THEN A.DISCON
               END) AS CNT
        FROM
            (SELECT
                 SUM(SNSRCNT) AS TOTAL, SUM(SNSRDISNCNT) AS DISCON
             FROM
                 V_ALL_AREA_MAP
             WHERE
                 GRPGUCODE LIKE '042|30%'
            ) A
                CROSS JOIN (SELECT 'TOTAL' AS TYPE, 1 AS ORDERNUM
                            UNION ALL SELECT 'DISCON', 2) B
        GROUP BY
            B.TYPE

        UNION

        SELECT
            B.TERM
            , B.TYPE
            , B.ORDERNUM
            , (CASE
                   WHEN CONCAT(B.TERM, B.TYPE) = 'TODAYWARN' THEN A.TODAYWARN
                   WHEN CONCAT(B.TERM, B.TYPE) = 'TODAYDANGER' THEN A.TODAYDANGER
                   WHEN CONCAT(B.TERM, B.TYPE) = 'COUNTWARN' THEN A.COUNTWARN
                   WHEN CONCAT(B.TERM, B.TYPE) = 'COUNTDANGER' THEN A.COUNTDANGER
               END) AS CNT
        FROM
            (SELECT
                 COUNT(DISTINCT CASE WHEN ISWARN = 1 THEN SNSRSEQ END) AS TODAYWARN
                 , COUNT(DISTINCT CASE WHEN ISDANGER = 1 THEN SNSRSEQ END) AS TODAYDANGER
                 , COALESCE(SUM(ISWARN), 0) AS COUNTWARN
                 , COALESCE(SUM(ISDANGER), 0) AS COUNTDANGER
             FROM
                 V_TODAY_SENSOR_LOG_MAP
             WHERE
                 GRPGUCODE LIKE '042|30%'
            ) A
                CROSS JOIN (SELECT 'TODAY' AS TERM, 'WARN' AS TYPE, 3 AS ORDERNUM
                            UNION ALL SELECT 'COUNT', 'WARN', 4
                            UNION ALL SELECT 'TODAY', 'DANGER', 5
                            UNION ALL SELECT 'COUNT', 'DANGER', 6) B
        GROUP BY
            B.TERM, B.TYPE
        ORDER BY
            ORDERNUM
        ]]>
    </select>

    <!-- 구별, 시장별 센서 현황 (상점, 센서, 경고, 주의, 끊김) -->
    <select id="LIST_MCM_AREA" parameterType="map" resultType="map">
        SELECT
            1 AS LEVEL
            , GUCODE AS CODE
            , GUNAME AS NAME
            , SNSRCNT AS SENSOR
            , STRCNT AS STORE
            , SUM(DANGERSNSRCNT) AS DANGER
            , SUM(WARNSNSRCNT) AS WARN
            , SUM(SNSRDISNCNT) AS DISCON
            , NULL AS UPCODE
            , SUM(DANGERCNT) * 10000 + SUM(WARNCNT) AS ORDERNUM
        FROM
            V_ALL_AREA_MAP
        WHERE
            GRPGUCODE LIKE '042|30%'
        GROUP BY
            GUCODE

        UNION

        SELECT
            2 AS LEVEL
            , AREACODE AS CODE
            , AREANAME AS NAME
            , SNSRCNT AS SENSOR
            , STRCNT AS STORE
            , DANGERSNSRCNT AS DANGER
            , WARNSNSRCNT AS WARN
            , SNSRDISNCNT AS DISCON
            , GUCODE AS UPCODE
            , 0 - (DANGERCNT * 10000 + WARNCNT) AS ORDERNUM
        FROM
            V_ALL_AREA_MAP
        WHERE
            GRPGUCODE LIKE '042|30%'
        ORDER BY
            LEVEL, ORDERNUM DESC
    </select>

    <!-- 점검내역 목록 -->
    <select id="LIST_MCM_CHECK_SENSOR" parameterType="map" resultType="map">
        SELECT
            D.AREACODE, D.AREANAME, B.STRCODE, B.SNSRID, B.SNSRNICK, A.STATE, A.CNT
        FROM
            (SELECT
                 A.SNSRID, 'CHECK' AS STATE, COUNT(*) AS CNT
             FROM
                 F_SENSOR_CHECK A
             WHERE
                 A.CHECKSTAT = 'ING'
             GROUP BY
                 A.SNSRID
            ) A
                LEFT JOIN F_SENSOR_INFO B
                    ON A.SNSRID = B.SNSRID
                LEFT JOIN F_STORE C
                    ON B.STRCODE = C.STRCODE
                LEFT JOIN F_LEVEL_AREA D
                    ON C.AREACODE = D.AREACODE
        WHERE
            CONCAT(B.DELYN, B.STRCODE) LIKE 'NFS_STR_%'
            AND CONCAT(C.USEYN, C.DELYN, C.GRPCODE) = 'YN042'
            AND CONCAT(D.AREALEVEL, D.USEYN, D.DELYN, D.GUCODE) LIKE '1YN30%'
        ORDER BY
            A.STATE, A.CNT DESC
    </select>

    <!-- 상태이상 센서 목록 -->
    <select id="LIST_MCM_SENSOR" parameterType="map" resultType="map">
        SELECT
            S.AREACODE, S.AREANAME, S.STRCODE, S.SNSRSEQ, S.SNSRNICK, S.STATE, S.CNT
        FROM
            (SELECT
                 A.AREACODE
                 , A.AREANAME
                 , A.STRCODE
                 , A.SNSRSEQ
                 , A.SNSRNICK
                 , B.STATE
                 , (CASE
                        WHEN B.STATE = 'DANGER' THEN COALESCE(SUM(A.ISDANGER), 0)
                        WHEN B.STATE = 'WARN' THEN COALESCE(SUM(A.ISWARN), 0)
                        WHEN B.STATE = 'BROKEN'
                            THEN COUNT(CASE WHEN EXISTS (SELECT DSEQ FROM F_SENSOR_DATA WHERE DSEQ = A.DSEQ AND SNSRIGO > 50) THEN A.DSEQ END)
                    END) AS CNT
             FROM
                 (SELECT
                      AREACODE, AREANAME, STRCODE, SNSRNICK, SNSRSEQ, DSEQ, LSEQ, ISDANGER, ISWARN
                  FROM
                      V_TODAY_SENSOR_LOG_MAP
                  WHERE
                      GRPGUCODE LIKE '042|30%'
                 ) A
                     CROSS JOIN (SELECT 'DANGER' AS STATE
                                 UNION ALL SELECT 'WARN'
                                 UNION ALL SELECT 'BROKEN') B
             GROUP BY
                 A.AREACODE, A.STRCODE, A.SNSRSEQ, B.STATE) S
        WHERE
            S.CNT > 0
        ORDER BY
            S.STATE, S.CNT DESC
    </select>

    <!-- 시장 현황 (전체, 경고, 주의, 끊김) -->
    <select id="LIST_MCM_AREA_SENSOR_CNT" parameterType="map" resultType="map">
        SELECT
            AREACODE
            , AREANAME
            , STRCNT AS TOTAL
            , SNSRDISNCNT AS DISCON
            , DANGERCNT AS DANGER
            , WARNCNT AS WARN
        FROM
            V_ALL_AREA_MAP
        WHERE
            GRPGUCODE LIKE '042|30%'
            AND AREACODE = #{areacode}
    </select>

    <!-- 시장 내 상점 현황 (경고, 주의, 끊김, 센서) -->
    <select id="LIST_MCM_AREA_STORE" parameterType="map" resultType="map">
        <![CDATA[
        SELECT
            AREACODE
            , STRCODE
            , STRNAME
            , DANGERCNT AS DANGER
            , WARNCNT AS WARN
            , SNSRDISNCNT AS CON
            , SNSRCNT AS SNSRCOUNT
        FROM
            V_ALL_STORE_MAP
        WHERE
            GRPGUCODE LIKE '042|30%'
            AND AREACODE = #{areacode}
        ORDER BY
            DANGER DESC, WARN DESC, CON DESC, STRNAME
        ]]>
    </select>

    <!-- 시장 내 센서 현황 (경고, 주의, 끊김, 점검) -->
    <select id="LIST_MCM_AREA_SENSOR" parameterType="map" resultType="map">
        SELECT
            ROW_NUMBER() OVER () AS ROWNUM
            , B.STRCODE
            , B.STRNAME
            , A.SNSRID
            , TRIM(LEADING '0' FROM A.SNSRID) AS SNSRIDTRIM
            , A.SNSRNICK
            , COALESCE(SUM(D.ISDANGER), 0) AS DANGER
            , COALESCE(SUM(D.ISWARN), 0) AS WARN
            , COUNT(DISTINCT CASE WHEN A.DATARCVTIME <![CDATA[<]]> NOW() - INTERVAL 1 HOUR THEN A.SNSRSEQ END) AS CON
            , E.CHK
        FROM
            F_SENSOR_INFO A
                LEFT JOIN F_STORE B
                    ON A.STRCODE = B.STRCODE
                LEFT JOIN F_LEVEL_AREA C
                    ON B.AREACODE = C.AREACODE
                LEFT JOIN (SELECT
                                SNSRSEQ, LSEQ, ISDANGER, ISWARN
                            FROM
                                V_TODAY_SENSOR_LOG_MAP
                            WHERE
                                ISALM = 1) D
                    ON A.SNSRSEQ = D.SNSRSEQ
                LEFT JOIN (SELECT
                               SNSRID, COUNT(*) AS CHK
                           FROM
                               F_SENSOR_CHECK
                           WHERE
                               CHECKSTAT = 'ING'
                           GROUP BY
                               SNSRID) E
                    ON A.SNSRID = E.SNSRID
        WHERE
            CONCAT(A.DELYN, A.STRCODE) LIKE 'NFS_STR_%'
            AND CONCAT(B.USEYN, B.DELYN, B.GRPCODE) = 'YN042'
            AND CONCAT(C.AREALEVEL, C.USEYN, C.DELYN, C.GUCODE) LIKE '1YN30%'
            AND C.AREACODE = #{areacode}
            <if test="!@org.thymeleaf.util.StringUtils@isEmptyOrWhitespace(strcode)">AND A.STRCODE = #{strcode}</if>
        GROUP BY
            A.SNSRID
        ORDER BY
            DANGER DESC, WARN DESC, CON DESC, SNSRID
    </select>

    <!-- 시장별 어제/오늘 데이터 추이 -->
    <select id="LIST_MCM_AREA_DATA_CHART" parameterType="map" resultType="map">
        SELECT
            '1' AS TYPE
            , CONCAT(SUBSTR(DATE_FORMAT(A.SNSRRCVTIME, '%H:%i'), 1, 4), '0') AS RCVTIME
            , COUNT(*) AS CNT
        FROM
            (SELECT
                 SNSRID, SNSRRCVTIME
             FROM <choose>
                      <when test="day == 1">F_SENSOR_DATA_2021</when>
                      <otherwise>F_SENSOR_DATA</otherwise>
                  </choose>
             WHERE
                 SNSRRCVTIME > CURDATE() - INTERVAL 1 DAY
                 AND SNSRRCVTIME <![CDATA[<]]> CURDATE()
            ) A
                LEFT JOIN F_SENSOR_INFO B
                    ON A.SNSRID = B.SNSRID
                LEFT JOIN F_LEVEL_AREA C
                    ON B.AREACODE = C.AREACODE
        WHERE
            CONCAT(B.DELYN, B.STRCODE) LIKE 'NFS_STR_%'
            AND CONCAT(C.AREALEVEL, C.USEYN, C.DELYN, C.GUCODE) LIKE '1YN30%'
            AND C.AREACODE = #{areacode}
        GROUP BY
            2

        UNION

        SELECT
            '2' AS TYPE
            , CONCAT(SUBSTR(DATE_FORMAT(A.SNSRRCVTIME, '%H:%i'), 1, 4), '0') AS RCVTUNE
            , COUNT(*) AS CNT
        FROM
            (SELECT SNSRID, SNSRRCVTIME FROM F_SENSOR_DATA WHERE SNSRRCVTIME > CURDATE()) A
                LEFT JOIN F_SENSOR_INFO B
                    ON A.SNSRID = B.SNSRID
                LEFT JOIN F_LEVEL_AREA C
                    ON B.AREACODE = C.AREACODE
        WHERE
            CONCAT(B.DELYN, B.STRCODE) LIKE 'NFS_STR_%'
            AND CONCAT(C.AREALEVEL, C.USEYN, C.DELYN, C.GUCODE) LIKE '1YN30%'
            AND C.AREACODE = #{areacode}
        GROUP BY
            2
        ORDER BY
            TYPE, RCVTIME
    </select>

    <!-- 시장별 어제/오늘 경보 발생 추이 -->
    <select id="LIST_MCM_AREA_LOG_CHART" parameterType="map" resultType="map">
        SELECT
            '1' AS TYPE
            , CONCAT(SUBSTR(DATE_FORMAT(A.REGDATE, '%H:%i'), 1, 4), '0') AS RCVTIME
            , COUNT(*) AS CNT
        FROM
            (SELECT
                 SNSRID, REGDATE
             FROM <choose>
                      <when test="day == 1">F_SENSOR_LOG_2021 A</when>
                      <otherwise>F_SENSOR_LOG A</otherwise>
                  </choose>
             WHERE
                 REGDATE > CURDATE() - INTERVAL 1 DAY
                 AND REGDATE <![CDATA[<]]> CURDATE()
                 AND INSTR(CONCAT(OCALM, IGOALM, IGRALM), '2') > 0
            ) A
                LEFT JOIN F_SENSOR_INFO B
                    ON A.SNSRID = B.SNSRID
                LEFT JOIN F_LEVEL_AREA C
                    ON B.AREACODE = C.AREACODE
       WHERE
           CONCAT(B.DELYN, B.STRCODE) LIKE 'NFS_STR_%'
           AND CONCAT(C.AREALEVEL, C.USEYN, C.DELYN, C.GUCODE) LIKE '1YN30%'
           AND C.AREACODE = #{areacode}
       GROUP BY
           2

       UNION

       SELECT
           '2' AS TYPE
           , CONCAT(SUBSTR(DATE_FORMAT(A.REGDATE, '%H:%i'), 1, 4), '0') AS RCVTUNE
           , COUNT(*) AS CNT
       FROM
           (SELECT
                SNSRID, REGDATE
            FROM
                F_SENSOR_LOG
            WHERE
                REGDATE > CURDATE()
                AND INSTR(CONCAT(OCALM, IGOALM, IGRALM), '2') > 0
           ) A
               LEFT JOIN F_SENSOR_INFO B
                   ON A.SNSRID = B.SNSRID
               LEFT JOIN F_LEVEL_AREA C
                   ON B.AREACODE = C.AREACODE
       WHERE
           CONCAT(B.DELYN, B.STRCODE) LIKE 'NFS_STR_%'
           AND CONCAT(C.AREALEVEL, C.USEYN, C.DELYN, C.GUCODE) LIKE '1YN30%'
           AND C.AREACODE = #{areacode}
       GROUP BY
           2
       ORDER BY
           TYPE, RCVTIME
    </select>

    <!-- 시장별 주간 데이터 추이 -->
    <select id="LIST_MCM_AREA_DATA_CHART_WEEK" parameterType="map" resultType="map">
        <![CDATA[
        SELECT
            '1' AS TYPE,
             SDATE AS RCVTIME,
             DAYOFWEEK(SDATE) AS WEEK,
             IFNULL(SUM(SNSRKWHDAILY), 0) AS CNT
        FROM
            F_CRN_AREA_ELEC_DAILY_STAT
        WHERE
            SDATE BETWEEN CURDATE() - INTERVAL (WEEKDAY(CURDATE()) + 1) + 7 DAY
                  AND CURDATE() - INTERVAL (WEEKDAY(CURDATE()) + 1) + 1 DAY
            AND GUCODE LIKE '30%'
            AND AREACODE = #{areacode}
        GROUP BY
            SDATE, AREACODE

        UNION

        SELECT
            '2' AS TYPE,
            SDATE AS RCVTIME,
            DAYOFWEEK(SDATE) AS WEEK,
            IFNULL(SUM(SNSRKWHDAILY), 0) AS CNT
        FROM
            F_CRN_AREA_ELEC_DAILY_STAT
        WHERE
            SDATE >= CURDATE() - INTERVAL WEEKDAY(CURDATE()) + 1 DAY
            AND GUCODE LIKE '30%'
            AND AREACODE = #{areacode}
        GROUP BY
            SDATE, AREACODE

       UNION

       SELECT
           '2' AS TYPE
           , DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i:%s') AS RCVTIME
           , DAYOFWEEK(CURDATE()) AS WEEK
           , IFNULL(SUM(USEKWH), 0) AS CNT
       FROM
           F_CRN_AREA_KWH_TODAY_STAT
       WHERE
           GUCODE LIKE '30%'
           AND AREACODE = #{areacode}
       ORDER BY
           TYPE, RCVTIME
       ]]>
    </select>

    <!-- 시장별 주간 경보 발생 추이 -->
    <select id="LIST_MCM_AREA_LOG_CHART_WEEK" parameterType="map" resultType="map">
        <![CDATA[
        SELECT
            '1' AS TYPE
            , DATE_FORMAT(A.REGDATE, '%Y-%m-%d') AS RCVTIME
            , DAYOFWEEK(A.REGDATE) AS WEEK
            , COUNT(*) AS CNT
        FROM
            (SELECT
                 S.SNSRID, S.REGDATE
             FROM
                 (SELECT SNSRID, REGDATE, CONCAT(OCALM, IGOALM, IGRALM) AS ALM FROM F_SENSOR_LOG_2021
                  UNION ALL SELECT SNSRID, REGDATE, CONCAT(OCALM, IGOALM, IGRALM) AS ALM FROM F_SENSOR_LOG) S
             WHERE
                 S.REGDATE > CURDATE() - INTERVAL (WEEKDAY(CURDATE()) + 1) + 7 DAY
                 AND S.REGDATE < CURDATE() - INTERVAL WEEKDAY(CURDATE()) + 1 DAY
                 AND INSTR(S.ALM, '2') > 0
            ) A
                LEFT JOIN F_SENSOR_INFO B
                    ON A.SNSRID = B.SNSRID
                LEFT JOIN F_LEVEL_AREA C
                    ON B.AREACODE = C.AREACODE
        WHERE
            CONCAT(B.DELYN, B.STRCODE) LIKE 'NFS_STR_%'
            AND CONCAT(C.AREALEVEL, C.USEYN, C.DELYN, C.GUCODE) LIKE '1YN30%'
            AND C.AREACODE = #{areacode}
        GROUP BY
            DATE(A.REGDATE)

        UNION

        SELECT
            '2' AS TYPE
            , DATE_FORMAT(A.REGDATE, '%Y-%m-%d') AS RCVTUNE
            , DAYOFWEEK(A.REGDATE) AS WEEK
            , COUNT(*) AS CNT
        FROM
            (SELECT
                 S.SNSRID, S.REGDATE
             FROM
                 (SELECT SNSRID, REGDATE, CONCAT(OCALM, IGOALM, IGRALM) AS ALM FROM F_SENSOR_LOG_2021
                  UNION ALL SELECT SNSRID, REGDATE, CONCAT(OCALM, IGOALM, IGRALM) AS ALM FROM F_SENSOR_LOG) S
             WHERE
                 S.REGDATE > CURDATE() - INTERVAL WEEKDAY(CURDATE()) + 1 DAY
                 AND INSTR(S.ALM, '2') > 0
            ) A
                LEFT JOIN F_SENSOR_INFO B
                    ON A.SNSRID = B.SNSRID
                LEFT JOIN F_LEVEL_AREA C
                    ON B.AREACODE = C.AREACODE
        WHERE
            CONCAT(B.DELYN, B.STRCODE) LIKE 'NFS_STR_%'
            AND CONCAT(C.AREALEVEL, C.USEYN, C.DELYN, C.GUCODE) LIKE '1YN30%'
            AND C.AREACODE = #{areacode}
        GROUP BY
            DATE(A.REGDATE)
        ORDER BY
            TYPE, RCVTIME
        ]]>
    </select>

    <!-- 시장 지도 정보 -->
    <select id="LIST_MCM_AREA_MAP_SENSOR" parameterType="map" resultType="map">
        SELECT
            B.STRCODE
            , B.STRNAME
            , A.SNSRID
            , A.SNSRNICK
            , B.STRPOSLAT
            , B.STRPOSLON
            , (CASE
                   WHEN C.DANGERCNT > 0 THEN 'danger'
                   WHEN C.WARNCNT > 0 THEN 'warning'
                   WHEN C.DATACNT > 0 THEN 'normal'
                   ELSE 'discon'
               END) AS STATE
        FROM
            F_SENSOR_INFO A
                LEFT JOIN F_STORE B
                    ON A.STRCODE = B.STRCODE
                LEFT JOIN (SELECT
                                C1.SNSRID
                                , COUNT(CASE WHEN C1.SNSRRCVTIME > NOW() - INTERVAL 1 HOUR THEN C1.DSEQ END) AS DATACNT
                                , COALESCE(SUM(C2.ISDANGER), 0) AS DANGERCNT
                                , COALESCE(SUM(C2.ISWARN), 0) AS WARNCNT
                            FROM
                                (SELECT SNSRID, DSEQ, SNSRRCVTIME FROM F_SENSOR_DATA WHERE SNSRRCVTIME > CURDATE()) C1
                                    LEFT JOIN (SELECT
                                                   DSEQ, LSEQ, ISDANGER, ISWARN
                                               FROM
                                                   V_TODAY_SENSOR_LOG_MAP
                                               WHERE
                                                   ISALM = 1) C2
                                        ON C1.DSEQ = C2.DSEQ
                            GROUP BY
                                C1.SNSRID) C
                    ON A.SNSRID = C.SNSRID
        WHERE
            CONCAT(A.DELYN, A.STRCODE) LIKE 'NFS_STR_%'
            AND CONCAT(B.USEYN, B.DELYN, B.GRPCODE) = 'YN042'
        ORDER BY
            C.DANGERCNT DESC, C.WARNCNT DESC, C.DATACNT DESC, B.STRNAME
    </select>

    <!-- 상점 검색 목록 -->
    <select id="LIST_MCM_STORE_SEARCH" parameterType="map" resultType="map">
        SELECT
            A.AREACODE, B.AREANAME, A.STRCODE, A.STRNAME
        FROM
            F_STORE A
                LEFT JOIN F_LEVEL_AREA B
                    ON A.AREACODE = B.AREACODE
        WHERE
            CONCAT(A.GRPCODE, A.USEYN, A.DELYN) = '042YN'
            AND CONCAT(B.AREALEVEL, B.USEYN, B.DELYN, B.GUCODE) LIKE '1YN30%'
            AND A.STRNAME LIKE CONCAT('%', #{search}, '%')
        ORDER BY
            A.STRNAME
    </select>

</mapper>
