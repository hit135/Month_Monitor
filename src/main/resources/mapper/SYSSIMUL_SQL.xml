<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.fscom.firsens.sys.repository.SYSSimulRepo">

    <select id="LIST_SYS_SIMULRAREA" resultType="map">
        SELECT AREACODE AS areaCode
             , AREANAME AS areaName
          FROM F_LEVEL_AREA
         WHERE AREALEVEL = 1 AND USEYN = 'Y' AND DELYN = 'N'
         ORDER BY AREACODE
    </select>

    <select id="CNT_SYS_SENSOR_LOG" parameterType="map" resultType="int">
        SELECT COUNT(LSEQ)
          FROM V_ALL_SENSOR_LOG_MAP
         WHERE ( REGDATE BETWEEN CONCAT(#{regDate}, ' 00:00:00') AND CONCAT(#{regDate}, ' 23:59:59') )
           AND ( OCALM + IGOALM + IGRALM ) > 0
           <if test="!@org.thymeleaf.util.StringUtils@isEmptyOrWhitespace(areaCode)">AND AREACODE = #{areaCode}</if>
           <if test="!@org.thymeleaf.util.StringUtils@isEmptyOrWhitespace(searchWrd)">
           AND (
                  STRCODE LIKE CONCAT('%', #{searchWrd}, '%')
               OR STRNAME LIKE CONCAT('%', #{searchWrd}, '%')
               OR LCAUSE  LIKE CONCAT('%', #{searchWrd}, '%')
           )
           </if>
    </select>

    <select id="LIST_SYS_SENSOR_LOG" parameterType="map" resultType="map">
        SELECT LSEQ AS lSeq
             , AREACODE AS areaCode
             , AREANAME AS areaName
             , STRCODE AS strCode
             , STRNAME AS strName
             , SNSRNICK AS snsrNick
             , DATE_FORMAT(REGDATE, '%Y-%m-%d %H:%i:%s') AS regDate
             , LCAUSE AS lCause
          FROM V_ALL_SENSOR_LOG_MAP
         WHERE ( REGDATE BETWEEN CONCAT(#{regDate}, ' 00:00:00') AND CONCAT(#{regDate}, ' 23:59:59') )
           AND ( OCALM + IGOALM + IGRALM ) > 0
           <if test="!@org.thymeleaf.util.StringUtils@isEmptyOrWhitespace(areaCode)">AND AREACODE = #{areaCode}</if>
           <if test="!@org.thymeleaf.util.StringUtils@isEmptyOrWhitespace(searchWrd)">
           AND (
                  STRCODE LIKE CONCAT('%', #{searchWrd}, '%')
               OR STRNAME LIKE CONCAT('%', #{searchWrd}, '%')
               OR LCAUSE  LIKE CONCAT('%', #{searchWrd}, '%')
           )
           </if>
         ORDER BY REGDATE DESC
         LIMIT #{page}, #{sizePerPage}
    </select>

    <select id="CNT_SYS_STORE" parameterType="map" resultType="int">
        SELECT COUNT(STRCODE)
          FROM F_STORE
         WHERE 1 = 1
           <if test="!@org.thymeleaf.util.StringUtils@isEmptyOrWhitespace(areaCode)">AND AREACODE = #{areaCode}</if>
           <if test="!@org.thymeleaf.util.StringUtils@isEmptyOrWhitespace(searchWrd)">
           AND (    STRCODE  LIKE CONCAT('%', #{searchWrd}, '%')
                 OR STRNAME  LIKE CONCAT('%', #{searchWrd}, '%') )
           </if>
         ORDER BY STRCODE DESC
    </select>

    <select id="LIST_SYS_STORE" parameterType="map" resultType="map">
        SELECT Z.*
          FROM ( SELECT @ROWNUM := @ROWNUM + 1  AS rowNum
                      , A.*
                   FROM ( SELECT S.STRCODE AS strCode
                               , S.STRNAME AS strName
                               , S.AREACODE AS areaCode
                               , ( SELECT AREANAME
                                     FROM F_LEVEL_AREA
                                    WHERE AREACODE = S.AREACODE AND AREALEVEL = 1 AND DELYN = 'N' ) AS areaName
                               , DATE(S.REGDATE) AS regDate
                            FROM F_STORE S
                           WHERE S.USEYN = 'Y'
                             AND S.DELYN = 'N'
                             <if test="!@org.thymeleaf.util.StringUtils@isEmptyOrWhitespace(areaCode)">AND S.AREACODE = #{areaCode}</if>
                             <if test="!@org.thymeleaf.util.StringUtils@isEmptyOrWhitespace(searchWrd)">
                             AND (    S.STRCODE  LIKE CONCAT('%', #{searchWrd}, '%')
                                   OR S.STRNAME  LIKE CONCAT('%', #{searchWrd}, '%') )
                             </if>
                           ORDER BY S.STRCODE DESC
                        ) A
                      , ( SELECT @ROWNUM := 0 ) R
               ) Z
         LIMIT #{page}, #{sizePerPage}
    </select>

    <select id="SELECT_SYS_PREVIEW_URGENT_ISSUE" parameterType="map" resultType="map">
        SELECT V.LSEQ AS lSeq
             , DATE_FORMAT(V.REGDATE, '%Y-%m-%d %H:%i:%s') AS regDate
             , V.AREANAME AS areaName
             , V.STRNAME AS strName
             , V.SNSRNICK AS snsrNick
             , V.LCAUSE AS lCause
             , D.SNSRAMPERE AS snsrAmpere
             , D.SNSRIGO AS snsrIgo
             , D.SNSRIGR AS snsrIgr
             , I.SOC1V1 AS soc1V1
             , I.SIGO1V AS sigo1V
             , I.SIGR1V AS sigr1V
          FROM V_ALL_SENSOR_LOG_MAP V
                 LEFT JOIN F_SENSOR_DATA D
                   ON V.DSEQ = D.DSEQ
                 LEFT JOIN F_SENSOR_INFO I
                   ON V.SNSRID = I.SNSRID
                   AND V.SNSRSEQ = I.SNSRSEQ
        WHERE V.LSEQ = #{lSeq}
    </select>

    <select id="SELECT_SYS_PREVIEW_NORMAL_ELEC_ISSUE" parameterType="map" resultType="map">
        SELECT Z.*
             , #{areaName} AS areaName
             , #{strName} AS strName
          FROM ( SELECT A.*
                      , RANK() OVER (ORDER BY A.snsrIgrAvg) AS snsrIgrRank
                      , B.*
                   FROM ( SELECT AREACODE AS areaCode
                               , STRCODE AS strCode
                               , AVG(SNSRIGRAVG) AS snsrIgrAvg
                               , AVG(SNSRIGRGRADE) AS snsrIgoGrade
                               , SUM(OC1ST + OC2ND) AS oc
                               , SUM(IGO1ST + IGO2ND + IGR1ST + IGR2ND) AS ig
                               , DATE(NOW() - INTERVAL DAYOFWEEK(NOW()) + 13 DAY) AS startDate
                               , DATE(NOW() - INTERVAL DAYOFWEEK(NOW()) + 0 DAY) AS endDate
                            FROM F_ELEC_SENSOR_STAT
                           WHERE ( SDATE BETWEEN DATE(NOW() - INTERVAL DAYOFWEEK(NOW()) + 13 DAY)
                                            AND DATE(NOW() - INTERVAL DAYOFWEEK(NOW()) + 0 DAY) )
                             AND AREACODE != '0'
                             AND STRCODE != '0'
                           GROUP BY AREACODE, STRCODE ) A
                      , ( SELECT COUNT(CONCAT(S.AREACODE, ' ', S.STRCODE)) AS strCnt
                            FROM ( SELECT DISTINCT AREACODE, STRCODE
                                     FROM F_ELEC_SENSOR_STAT
                                    WHERE ( SDATE BETWEEN DATE(NOW() - INTERVAL DAYOFWEEK(NOW()) + 13 DAY)
                                                      AND DATE(NOW() - INTERVAL DAYOFWEEK(NOW()) + 0 DAY) )
                                      AND AREACODE != '0'
                                      AND STRCODE != '0' ) S
                        ) B
               ) Z
         WHERE Z.areaCode = #{areaCode} 
           AND Z.strCode = #{strCode}
    </select>

    <select id="LIST_SYS_PREVIEW_NORMAL_KWH_ISSUE" parameterType="map" resultType="map">
        SELECT Z.*
          FROM ( SELECT A.*
                      , RANK() OVER (ORDER BY A.snsrKwhDailyAvg) AS snsrKwhRank
                   FROM ( SELECT AREACODE AS areaCode
                               , STRCODE AS strCode
                               , AVG(SNSRKWHDAILY) AS snsrKwhDailyAvg
                               , SUM(SNSRKWHDAILY) / 2 AS snsrKwhWeeklyAvg
                            FROM F_ELEC_SENSOR_STAT
                           WHERE ( SDATE BETWEEN DATE(NOW() - INTERVAL DAYOFWEEK(NOW()) + 13 DAY)
                                             AND DATE(NOW() - INTERVAL DAYOFWEEK(NOW()) + 0 DAY) )
                             AND AREACODE != '0'
                             AND STRCODE != '0'
                           GROUP BY AREACODE, STRCODE ) A
               ) Z
         WHERE Z.areaCode = #{areaCode}
           AND Z.strCode = #{strCode}
         UNION ALL
        SELECT Z.*
          FROM ( SELECT A.*
                      , RANK() OVER (ORDER BY A.snsrKwhDailyAvg) AS snsrKwhRank
                   FROM ( SELECT AREACODE AS areaCode
                               , STRCODE AS strCode
                               , AVG(SNSRKWHDAILY) AS snsrKwhDailyAvg
                               , SUM(SNSRKWHDAILY) / 2 AS snsrKwhWeeklyAvg
                            FROM F_ELEC_SENSOR_STAT
                           WHERE ( SDATE BETWEEN DATE(NOW() - INTERVAL DAYOFWEEK(NOW()) + 27 DAY)
                                             AND DATE(NOW() - INTERVAL DAYOFWEEK(NOW()) + 14 DAY) )
                             AND AREACODE != '0'
                             AND STRCODE != '0'
                           GROUP BY AREACODE, STRCODE ) A
               ) Z
         WHERE Z.areaCode = #{areaCode}
           AND Z.strCode = #{strCode}
    </select>

    <insert id="INSERT_SYS_PUSH" parameterType="map">
        INSERT INTO F_PUSH_LOG (SNSRSEQ, PUSHMSG, PUSHSTIME, USERID, SENDRESULT, RESENDSEQ, TOINFO, FROMINFO, PUSHRSLT)
        VALUES (#{snsrseq}, #{pushmsg}, NOW(), #{userid}, #{sendresult}, #{resendseq}, #{toinfo}, #{frominfo}, #{pushRslt})
    </insert>

</mapper>